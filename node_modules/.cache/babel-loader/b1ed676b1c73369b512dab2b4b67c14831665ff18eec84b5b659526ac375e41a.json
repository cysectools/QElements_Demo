{"ast":null,"code":"export class QElementThemeManager {\n  constructor() {\n    this._themes = new Map();\n    this._currentTheme = 'default';\n    this._customProperties = new Map();\n    this._initializeDefaultTheme();\n  }\n  _initializeDefaultTheme() {\n    const defaultTheme = {\n      name: 'default',\n      colors: {\n        primary: '#3b82f6',\n        secondary: '#8b5cf6',\n        background: '#ffffff',\n        surface: '#f8fafc',\n        text: '#1f2937',\n        textSecondary: '#6b7280',\n        border: '#e5e7eb',\n        error: '#ef4444',\n        warning: '#f59e0b',\n        success: '#10b981',\n        info: '#06b6d4'\n      },\n      typography: {\n        fontFamily: 'system-ui, -apple-system, sans-serif',\n        fontSize: {\n          xs: '0.75rem',\n          sm: '0.875rem',\n          base: '1rem',\n          lg: '1.125rem',\n          xl: '1.25rem',\n          '2xl': '1.5rem',\n          '3xl': '1.875rem'\n        },\n        fontWeight: {\n          light: 300,\n          normal: 400,\n          medium: 500,\n          semibold: 600,\n          bold: 700\n        }\n      },\n      spacing: {\n        xs: '0.25rem',\n        sm: '0.5rem',\n        md: '1rem',\n        lg: '1.5rem',\n        xl: '2rem',\n        '2xl': '3rem'\n      },\n      breakpoints: {\n        sm: '640px',\n        md: '768px',\n        lg: '1024px',\n        xl: '1280px',\n        '2xl': '1536px'\n      },\n      borderRadius: {\n        none: '0',\n        sm: '0.125rem',\n        md: '0.375rem',\n        lg: '0.5rem',\n        xl: '0.75rem',\n        full: '9999px'\n      },\n      shadows: {\n        sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n        md: '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',\n        lg: '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',\n        xl: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)'\n      }\n    };\n    this._themes.set('default', defaultTheme);\n  }\n\n  // Register a new theme\n  registerTheme(theme) {\n    this._themes.set(theme.name, theme);\n  }\n\n  // Set the current theme\n  setCurrentTheme(themeName) {\n    if (this._themes.has(themeName)) {\n      this._currentTheme = themeName;\n    } else {\n      throw new Error(`Theme \"${themeName}\" not found`);\n    }\n  }\n\n  // Get the current theme\n  getCurrentTheme() {\n    return this._themes.get(this._currentTheme) || this._themes.get('default');\n  }\n\n  // Get a specific theme\n  getTheme(themeName) {\n    return this._themes.get(themeName) || null;\n  }\n\n  // Get all available themes\n  getAvailableThemes() {\n    return Array.from(this._themes.keys());\n  }\n\n  // Apply theme variables to a style object\n  applyThemeVariables(style) {\n    const theme = this.getCurrentTheme();\n    const processedStyle = {\n      ...style\n    };\n\n    // Process theme variables\n    Object.entries(processedStyle).forEach(([key, value]) => {\n      if (typeof value === 'string' && value.startsWith('$')) {\n        const variableName = value.substring(1);\n        const themeValue = this._getThemeValue(theme, variableName);\n        if (themeValue !== undefined) {\n          processedStyle[key] = themeValue;\n        }\n      }\n    });\n    return processedStyle;\n  }\n\n  // Get a theme value by path (e.g., 'colors.primary')\n  _getThemeValue(theme, path) {\n    const keys = path.split('.');\n    let value = theme;\n    for (const key of keys) {\n      if (value && typeof value === 'object' && key in value) {\n        value = value[key];\n      } else {\n        return undefined;\n      }\n    }\n    return value;\n  }\n\n  // Set custom properties\n  setCustomProperty(key, value) {\n    this._customProperties.set(key, value);\n  }\n\n  // Get custom property\n  getCustomProperty(key) {\n    return this._customProperties.get(key);\n  }\n\n  // Create a style with theme variables\n  createThemedStyle(baseStyle) {\n    return this.applyThemeVariables(baseStyle);\n  }\n\n  // Generate CSS custom properties for the current theme\n  generateCSSVariables() {\n    const theme = this.getCurrentTheme();\n    const variables = [];\n\n    // Add color variables\n    Object.entries(theme.colors).forEach(([key, value]) => {\n      variables.push(`--qelement-color-${key}: ${value};`);\n    });\n\n    // Add spacing variables\n    Object.entries(theme.spacing).forEach(([key, value]) => {\n      variables.push(`--qelement-spacing-${key}: ${value};`);\n    });\n\n    // Add typography variables\n    variables.push(`--qelement-font-family: ${theme.typography.fontFamily};`);\n    Object.entries(theme.typography.fontSize).forEach(([key, value]) => {\n      variables.push(`--qelement-font-size-${key}: ${value};`);\n    });\n    Object.entries(theme.typography.fontWeight).forEach(([key, value]) => {\n      variables.push(`--qelement-font-weight-${key}: ${value};`);\n    });\n\n    // Add border radius variables\n    Object.entries(theme.borderRadius).forEach(([key, value]) => {\n      variables.push(`--qelement-border-radius-${key}: ${value};`);\n    });\n\n    // Add shadow variables\n    Object.entries(theme.shadows).forEach(([key, value]) => {\n      variables.push(`--qelement-shadow-${key}: ${value};`);\n    });\n    return `:root {\\n  ${variables.join('\\n  ')}\\n}`;\n  }\n}","map":{"version":3,"names":["QElementThemeManager","constructor","_themes","Map","_currentTheme","_customProperties","_initializeDefaultTheme","defaultTheme","name","colors","primary","secondary","background","surface","text","textSecondary","border","error","warning","success","info","typography","fontFamily","fontSize","xs","sm","base","lg","xl","fontWeight","light","normal","medium","semibold","bold","spacing","md","breakpoints","borderRadius","none","full","shadows","set","registerTheme","theme","setCurrentTheme","themeName","has","Error","getCurrentTheme","get","getTheme","getAvailableThemes","Array","from","keys","applyThemeVariables","style","processedStyle","Object","entries","forEach","key","value","startsWith","variableName","substring","themeValue","_getThemeValue","undefined","path","split","setCustomProperty","getCustomProperty","createThemedStyle","baseStyle","generateCSSVariables","variables","push","join"],"sources":["/Users/jayson/Downloads/QElements_Demo/src/qelements/QElementTheme.ts"],"sourcesContent":["import { QElementTheme, QElementStyle } from './types';\n\nexport class QElementThemeManager {\n  private _themes: Map<string, QElementTheme> = new Map();\n  private _currentTheme: string = 'default';\n  private _customProperties: Map<string, any> = new Map();\n\n  constructor() {\n    this._initializeDefaultTheme();\n  }\n\n  private _initializeDefaultTheme(): void {\n    const defaultTheme: QElementTheme = {\n      name: 'default',\n      colors: {\n        primary: '#3b82f6',\n        secondary: '#8b5cf6',\n        background: '#ffffff',\n        surface: '#f8fafc',\n        text: '#1f2937',\n        textSecondary: '#6b7280',\n        border: '#e5e7eb',\n        error: '#ef4444',\n        warning: '#f59e0b',\n        success: '#10b981',\n        info: '#06b6d4'\n      },\n      typography: {\n        fontFamily: 'system-ui, -apple-system, sans-serif',\n        fontSize: {\n          xs: '0.75rem',\n          sm: '0.875rem',\n          base: '1rem',\n          lg: '1.125rem',\n          xl: '1.25rem',\n          '2xl': '1.5rem',\n          '3xl': '1.875rem'\n        },\n        fontWeight: {\n          light: 300,\n          normal: 400,\n          medium: 500,\n          semibold: 600,\n          bold: 700\n        }\n      },\n      spacing: {\n        xs: '0.25rem',\n        sm: '0.5rem',\n        md: '1rem',\n        lg: '1.5rem',\n        xl: '2rem',\n        '2xl': '3rem'\n      },\n      breakpoints: {\n        sm: '640px',\n        md: '768px',\n        lg: '1024px',\n        xl: '1280px',\n        '2xl': '1536px'\n      },\n      borderRadius: {\n        none: '0',\n        sm: '0.125rem',\n        md: '0.375rem',\n        lg: '0.5rem',\n        xl: '0.75rem',\n        full: '9999px'\n      },\n      shadows: {\n        sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n        md: '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',\n        lg: '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',\n        xl: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)'\n      }\n    };\n\n    this._themes.set('default', defaultTheme);\n  }\n\n  // Register a new theme\n  registerTheme(theme: QElementTheme): void {\n    this._themes.set(theme.name, theme);\n  }\n\n  // Set the current theme\n  setCurrentTheme(themeName: string): void {\n    if (this._themes.has(themeName)) {\n      this._currentTheme = themeName;\n    } else {\n      throw new Error(`Theme \"${themeName}\" not found`);\n    }\n  }\n\n  // Get the current theme\n  getCurrentTheme(): QElementTheme {\n    return this._themes.get(this._currentTheme) || this._themes.get('default')!;\n  }\n\n  // Get a specific theme\n  getTheme(themeName: string): QElementTheme | null {\n    return this._themes.get(themeName) || null;\n  }\n\n  // Get all available themes\n  getAvailableThemes(): string[] {\n    return Array.from(this._themes.keys());\n  }\n\n  // Apply theme variables to a style object\n  applyThemeVariables(style: QElementStyle): QElementStyle {\n    const theme = this.getCurrentTheme();\n    const processedStyle: QElementStyle = { ...style };\n\n    // Process theme variables\n    Object.entries(processedStyle).forEach(([key, value]) => {\n      if (typeof value === 'string' && value.startsWith('$')) {\n        const variableName = value.substring(1);\n        const themeValue = this._getThemeValue(theme, variableName);\n        if (themeValue !== undefined) {\n          (processedStyle as any)[key] = themeValue;\n        }\n      }\n    });\n\n    return processedStyle;\n  }\n\n  // Get a theme value by path (e.g., 'colors.primary')\n  private _getThemeValue(theme: QElementTheme, path: string): any {\n    const keys = path.split('.');\n    let value: any = theme;\n    \n    for (const key of keys) {\n      if (value && typeof value === 'object' && key in value) {\n        value = (value as any)[key];\n      } else {\n        return undefined;\n      }\n    }\n    \n    return value;\n  }\n\n  // Set custom properties\n  setCustomProperty(key: string, value: any): void {\n    this._customProperties.set(key, value);\n  }\n\n  // Get custom property\n  getCustomProperty(key: string): any {\n    return this._customProperties.get(key);\n  }\n\n  // Create a style with theme variables\n  createThemedStyle(baseStyle: QElementStyle): QElementStyle {\n    return this.applyThemeVariables(baseStyle);\n  }\n\n  // Generate CSS custom properties for the current theme\n  generateCSSVariables(): string {\n    const theme = this.getCurrentTheme();\n    const variables: string[] = [];\n\n    // Add color variables\n    Object.entries(theme.colors).forEach(([key, value]) => {\n      variables.push(`--qelement-color-${key}: ${value};`);\n    });\n\n    // Add spacing variables\n    Object.entries(theme.spacing).forEach(([key, value]) => {\n      variables.push(`--qelement-spacing-${key}: ${value};`);\n    });\n\n    // Add typography variables\n    variables.push(`--qelement-font-family: ${theme.typography.fontFamily};`);\n    \n    Object.entries(theme.typography.fontSize).forEach(([key, value]) => {\n      variables.push(`--qelement-font-size-${key}: ${value};`);\n    });\n\n    Object.entries(theme.typography.fontWeight).forEach(([key, value]) => {\n      variables.push(`--qelement-font-weight-${key}: ${value};`);\n    });\n\n    // Add border radius variables\n    Object.entries(theme.borderRadius).forEach(([key, value]) => {\n      variables.push(`--qelement-border-radius-${key}: ${value};`);\n    });\n\n    // Add shadow variables\n    Object.entries(theme.shadows).forEach(([key, value]) => {\n      variables.push(`--qelement-shadow-${key}: ${value};`);\n    });\n\n    return `:root {\\n  ${variables.join('\\n  ')}\\n}`;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}