{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QElement = void 0;\nconst QElementValidator_1 = require(\"./QElementValidator\");\nconst QElementTheme_1 = require(\"./QElementTheme\");\nconst QElementResponsive_1 = require(\"./QElementResponsive\");\nclass QElement {\n  constructor(id, style = {}, metadata = {}, validator, themeManager, responsiveManager) {\n    this._parent = null;\n    this._children = [];\n    this._overrides = {};\n    this._metadata = {};\n    this._animations = new Map();\n    this._isVisible = true;\n    this._isEnabled = true;\n    // Event system for style changes\n    this._styleChangeListeners = [];\n    this._id = id;\n    this._style = {\n      ...style\n    };\n    this._metadata = {\n      ...metadata\n    };\n    this._validator = validator || new QElementValidator_1.QElementValidator();\n    this._themeManager = themeManager || new QElementTheme_1.QElementThemeManager();\n    this._responsiveManager = responsiveManager || new QElementResponsive_1.QElementResponsiveManager();\n  }\n  get id() {\n    return this._id;\n  }\n  get style() {\n    return this._style;\n  }\n  get parent() {\n    return this._parent;\n  }\n  get children() {\n    return [...this._children];\n  }\n  get overrides() {\n    return {\n      ...this._overrides\n    };\n  }\n  // Get the computed style (parent styles + overrides + theme + responsive)\n  get computedStyle() {\n    const parentStyle = this._parent?.computedStyle || {};\n    const baseStyle = {\n      ...parentStyle,\n      ...this._overrides\n    };\n    // Apply theme variables\n    const themedStyle = this._themeManager.applyThemeVariables(baseStyle);\n    // Apply responsive styles\n    const responsiveStyle = this._responsiveManager.getResponsiveStyles(themedStyle);\n    return responsiveStyle;\n  }\n  // Set parent element\n  setParent(parent) {\n    if (this._parent) {\n      this._parent.removeChild(this);\n    }\n    this._parent = parent;\n    parent._children.push(this);\n  }\n  // Add child element\n  addChild(child) {\n    child.setParent(this);\n  }\n  // Remove child element\n  removeChild(child) {\n    const index = this._children.indexOf(child);\n    if (index > -1) {\n      this._children.splice(index, 1);\n      child._parent = null;\n    }\n  }\n  // Reset overrides to parent values\n  resetOverrides() {\n    this._overrides = {};\n  }\n  // Get a specific style property (with inheritance)\n  getStyleProperty(property) {\n    const computed = this.computedStyle;\n    return computed[property];\n  }\n  // Set a specific style property (as override)\n  setStyleProperty(property, value) {\n    this.overrideStyle({\n      [property]: value\n    });\n  }\n  // Convert to configuration object\n  toConfig() {\n    return {\n      id: this._id,\n      style: this._style,\n      children: this._children.map(child => child.toConfig())\n    };\n  }\n  // Create from configuration\n  static fromConfig(config) {\n    const element = new QElement(config.id, config.style);\n    if (config.children) {\n      config.children.forEach(childConfig => {\n        const child = QElement.fromConfig(childConfig);\n        element.addChild(child);\n      });\n    }\n    return element;\n  }\n  // Find element by ID\n  findById(id) {\n    if (this._id === id) {\n      return this;\n    }\n    for (const child of this._children) {\n      const found = child.findById(id);\n      if (found) return found;\n    }\n    return null;\n  }\n  // Get all descendants\n  getAllDescendants() {\n    const descendants = [];\n    for (const child of this._children) {\n      descendants.push(child);\n      descendants.push(...child.getAllDescendants());\n    }\n    return descendants;\n  }\n  // Clone the element\n  clone() {\n    return QElement.fromConfig(this.toConfig());\n  }\n  // Enhanced methods for advanced features\n  // Metadata management\n  get metadata() {\n    return {\n      ...this._metadata\n    };\n  }\n  updateMetadata(metadata) {\n    this._metadata = {\n      ...this._metadata,\n      ...metadata,\n      updatedAt: new Date()\n    };\n  }\n  // Visibility and state management\n  get isVisible() {\n    return this._isVisible;\n  }\n  get isEnabled() {\n    return this._isEnabled;\n  }\n  setVisible(visible) {\n    this._isVisible = visible;\n  }\n  setEnabled(enabled) {\n    this._isEnabled = enabled;\n  }\n  // Animation management\n  addAnimation(name, animation) {\n    this._animations.set(name, animation);\n  }\n  removeAnimation(name) {\n    this._animations.delete(name);\n  }\n  getAnimation(name) {\n    return this._animations.get(name);\n  }\n  getAllAnimations() {\n    return Array.from(this._animations.values());\n  }\n  // Style validation\n  validateStyle() {\n    return this._validator.validate(this._style);\n  }\n  validateOverrides() {\n    return this._validator.validate(this._overrides);\n  }\n  // Theme management\n  applyTheme(themeName) {\n    this._themeManager.setCurrentTheme(themeName);\n  }\n  getCurrentTheme() {\n    return this._themeManager.getCurrentTheme().name;\n  }\n  // Responsive management\n  getCurrentBreakpoint() {\n    return this._responsiveManager.getCurrentBreakpoint();\n  }\n  createResponsiveStyles(responsiveStyles) {\n    const responsiveStyle = this._responsiveManager.createResponsiveStyles(this._style, responsiveStyles);\n    this.updateStyle(responsiveStyle);\n  }\n  // Advanced style operations\n  mergeStyle(newStyle, deep = false) {\n    if (deep) {\n      this._style = this._deepMerge(this._style, newStyle);\n    } else {\n      this._style = {\n        ...this._style,\n        ...newStyle\n      };\n    }\n  }\n  _deepMerge(target, source) {\n    const result = {\n      ...target\n    };\n    for (const key in source) {\n      if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\n        result[key] = this._deepMerge(target[key] || {}, source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    }\n    return result;\n  }\n  // Style inheritance control\n  inheritFromParent(properties) {\n    if (this._parent) {\n      const parentStyle = this._parent.computedStyle;\n      const inheritedStyle = {};\n      properties.forEach(prop => {\n        if (parentStyle[prop] !== undefined) {\n          inheritedStyle[prop] = parentStyle[prop];\n        }\n      });\n      this.overrideStyle(inheritedStyle);\n    }\n  }\n  // Style reset methods\n  resetToParent() {\n    this._overrides = {};\n  }\n  resetToDefault() {\n    this._style = {};\n    this._overrides = {};\n  }\n  // Performance and optimization\n  getStyleHash() {\n    const styleString = JSON.stringify(this.computedStyle);\n    return this._hashString(styleString);\n  }\n  _hashString(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = (hash << 5) - hash + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return hash.toString(36);\n  }\n  onStyleChange(listener) {\n    this._styleChangeListeners.push(listener);\n    return () => {\n      const index = this._styleChangeListeners.indexOf(listener);\n      if (index > -1) {\n        this._styleChangeListeners.splice(index, 1);\n      }\n    };\n  }\n  _notifyStyleChange() {\n    this._styleChangeListeners.forEach(listener => listener(this));\n  }\n  // Enhanced update methods that notify listeners\n  updateStyle(newStyle) {\n    this._style = {\n      ...this._style,\n      ...newStyle\n    };\n    this._notifyStyleChange();\n  }\n  overrideStyle(overrides) {\n    this._overrides = {\n      ...this._overrides,\n      ...overrides\n    };\n    this._notifyStyleChange();\n  }\n}\nexports.QElement = QElement;","map":{"version":3,"names":["Object","defineProperty","exports","value","QElement","QElementValidator_1","require","QElementTheme_1","QElementResponsive_1","constructor","id","style","metadata","validator","themeManager","responsiveManager","_parent","_children","_overrides","_metadata","_animations","Map","_isVisible","_isEnabled","_styleChangeListeners","_id","_style","_validator","QElementValidator","_themeManager","QElementThemeManager","_responsiveManager","QElementResponsiveManager","parent","children","overrides","computedStyle","parentStyle","baseStyle","themedStyle","applyThemeVariables","responsiveStyle","getResponsiveStyles","setParent","removeChild","push","addChild","child","index","indexOf","splice","resetOverrides","getStyleProperty","property","computed","setStyleProperty","overrideStyle","toConfig","map","fromConfig","config","element","forEach","childConfig","findById","found","getAllDescendants","descendants","clone","updateMetadata","updatedAt","Date","isVisible","isEnabled","setVisible","visible","setEnabled","enabled","addAnimation","name","animation","set","removeAnimation","delete","getAnimation","get","getAllAnimations","Array","from","values","validateStyle","validate","validateOverrides","applyTheme","themeName","setCurrentTheme","getCurrentTheme","getCurrentBreakpoint","createResponsiveStyles","responsiveStyles","updateStyle","mergeStyle","newStyle","deep","_deepMerge","target","source","result","key","isArray","inheritFromParent","properties","inheritedStyle","prop","undefined","resetToParent","resetToDefault","getStyleHash","styleString","JSON","stringify","_hashString","str","hash","i","length","char","charCodeAt","toString","onStyleChange","listener","_notifyStyleChange"],"sources":["/Users/jayson/Downloads/QElement/dist/QElement.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QElement = void 0;\nconst QElementValidator_1 = require(\"./QElementValidator\");\nconst QElementTheme_1 = require(\"./QElementTheme\");\nconst QElementResponsive_1 = require(\"./QElementResponsive\");\nclass QElement {\n    constructor(id, style = {}, metadata = {}, validator, themeManager, responsiveManager) {\n        this._parent = null;\n        this._children = [];\n        this._overrides = {};\n        this._metadata = {};\n        this._animations = new Map();\n        this._isVisible = true;\n        this._isEnabled = true;\n        // Event system for style changes\n        this._styleChangeListeners = [];\n        this._id = id;\n        this._style = { ...style };\n        this._metadata = { ...metadata };\n        this._validator = validator || new QElementValidator_1.QElementValidator();\n        this._themeManager = themeManager || new QElementTheme_1.QElementThemeManager();\n        this._responsiveManager = responsiveManager || new QElementResponsive_1.QElementResponsiveManager();\n    }\n    get id() {\n        return this._id;\n    }\n    get style() {\n        return this._style;\n    }\n    get parent() {\n        return this._parent;\n    }\n    get children() {\n        return [...this._children];\n    }\n    get overrides() {\n        return { ...this._overrides };\n    }\n    // Get the computed style (parent styles + overrides + theme + responsive)\n    get computedStyle() {\n        const parentStyle = this._parent?.computedStyle || {};\n        const baseStyle = { ...parentStyle, ...this._overrides };\n        // Apply theme variables\n        const themedStyle = this._themeManager.applyThemeVariables(baseStyle);\n        // Apply responsive styles\n        const responsiveStyle = this._responsiveManager.getResponsiveStyles(themedStyle);\n        return responsiveStyle;\n    }\n    // Set parent element\n    setParent(parent) {\n        if (this._parent) {\n            this._parent.removeChild(this);\n        }\n        this._parent = parent;\n        parent._children.push(this);\n    }\n    // Add child element\n    addChild(child) {\n        child.setParent(this);\n    }\n    // Remove child element\n    removeChild(child) {\n        const index = this._children.indexOf(child);\n        if (index > -1) {\n            this._children.splice(index, 1);\n            child._parent = null;\n        }\n    }\n    // Reset overrides to parent values\n    resetOverrides() {\n        this._overrides = {};\n    }\n    // Get a specific style property (with inheritance)\n    getStyleProperty(property) {\n        const computed = this.computedStyle;\n        return computed[property];\n    }\n    // Set a specific style property (as override)\n    setStyleProperty(property, value) {\n        this.overrideStyle({ [property]: value });\n    }\n    // Convert to configuration object\n    toConfig() {\n        return {\n            id: this._id,\n            style: this._style,\n            children: this._children.map(child => child.toConfig())\n        };\n    }\n    // Create from configuration\n    static fromConfig(config) {\n        const element = new QElement(config.id, config.style);\n        if (config.children) {\n            config.children.forEach(childConfig => {\n                const child = QElement.fromConfig(childConfig);\n                element.addChild(child);\n            });\n        }\n        return element;\n    }\n    // Find element by ID\n    findById(id) {\n        if (this._id === id) {\n            return this;\n        }\n        for (const child of this._children) {\n            const found = child.findById(id);\n            if (found)\n                return found;\n        }\n        return null;\n    }\n    // Get all descendants\n    getAllDescendants() {\n        const descendants = [];\n        for (const child of this._children) {\n            descendants.push(child);\n            descendants.push(...child.getAllDescendants());\n        }\n        return descendants;\n    }\n    // Clone the element\n    clone() {\n        return QElement.fromConfig(this.toConfig());\n    }\n    // Enhanced methods for advanced features\n    // Metadata management\n    get metadata() {\n        return { ...this._metadata };\n    }\n    updateMetadata(metadata) {\n        this._metadata = { ...this._metadata, ...metadata, updatedAt: new Date() };\n    }\n    // Visibility and state management\n    get isVisible() {\n        return this._isVisible;\n    }\n    get isEnabled() {\n        return this._isEnabled;\n    }\n    setVisible(visible) {\n        this._isVisible = visible;\n    }\n    setEnabled(enabled) {\n        this._isEnabled = enabled;\n    }\n    // Animation management\n    addAnimation(name, animation) {\n        this._animations.set(name, animation);\n    }\n    removeAnimation(name) {\n        this._animations.delete(name);\n    }\n    getAnimation(name) {\n        return this._animations.get(name);\n    }\n    getAllAnimations() {\n        return Array.from(this._animations.values());\n    }\n    // Style validation\n    validateStyle() {\n        return this._validator.validate(this._style);\n    }\n    validateOverrides() {\n        return this._validator.validate(this._overrides);\n    }\n    // Theme management\n    applyTheme(themeName) {\n        this._themeManager.setCurrentTheme(themeName);\n    }\n    getCurrentTheme() {\n        return this._themeManager.getCurrentTheme().name;\n    }\n    // Responsive management\n    getCurrentBreakpoint() {\n        return this._responsiveManager.getCurrentBreakpoint();\n    }\n    createResponsiveStyles(responsiveStyles) {\n        const responsiveStyle = this._responsiveManager.createResponsiveStyles(this._style, responsiveStyles);\n        this.updateStyle(responsiveStyle);\n    }\n    // Advanced style operations\n    mergeStyle(newStyle, deep = false) {\n        if (deep) {\n            this._style = this._deepMerge(this._style, newStyle);\n        }\n        else {\n            this._style = { ...this._style, ...newStyle };\n        }\n    }\n    _deepMerge(target, source) {\n        const result = { ...target };\n        for (const key in source) {\n            if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\n                result[key] = this._deepMerge(target[key] || {}, source[key]);\n            }\n            else {\n                result[key] = source[key];\n            }\n        }\n        return result;\n    }\n    // Style inheritance control\n    inheritFromParent(properties) {\n        if (this._parent) {\n            const parentStyle = this._parent.computedStyle;\n            const inheritedStyle = {};\n            properties.forEach(prop => {\n                if (parentStyle[prop] !== undefined) {\n                    inheritedStyle[prop] = parentStyle[prop];\n                }\n            });\n            this.overrideStyle(inheritedStyle);\n        }\n    }\n    // Style reset methods\n    resetToParent() {\n        this._overrides = {};\n    }\n    resetToDefault() {\n        this._style = {};\n        this._overrides = {};\n    }\n    // Performance and optimization\n    getStyleHash() {\n        const styleString = JSON.stringify(this.computedStyle);\n        return this._hashString(styleString);\n    }\n    _hashString(str) {\n        let hash = 0;\n        for (let i = 0; i < str.length; i++) {\n            const char = str.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash = hash & hash; // Convert to 32-bit integer\n        }\n        return hash.toString(36);\n    }\n    onStyleChange(listener) {\n        this._styleChangeListeners.push(listener);\n        return () => {\n            const index = this._styleChangeListeners.indexOf(listener);\n            if (index > -1) {\n                this._styleChangeListeners.splice(index, 1);\n            }\n        };\n    }\n    _notifyStyleChange() {\n        this._styleChangeListeners.forEach(listener => listener(this));\n    }\n    // Enhanced update methods that notify listeners\n    updateStyle(newStyle) {\n        this._style = { ...this._style, ...newStyle };\n        this._notifyStyleChange();\n    }\n    overrideStyle(overrides) {\n        this._overrides = { ...this._overrides, ...overrides };\n        this._notifyStyleChange();\n    }\n}\nexports.QElement = QElement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}