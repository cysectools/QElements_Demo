{"ast":null,"code":"var _jsxFileName = \"/Users/jayson/Downloads/QElements_Demo/src/qelements/QElementProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\n\n// QElement Style Interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// QElement Class\nexport class QElement {\n  constructor(id, style = {}) {\n    this.id = void 0;\n    this.style = void 0;\n    this.parent = null;\n    this.children = [];\n    this.overrides = {};\n    this.id = id;\n    this.style = style;\n  }\n  addChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n    if (index > -1) {\n      this.children.splice(index, 1);\n      child.parent = null;\n    }\n  }\n  getComputedStyle() {\n    const computed = {\n      ...this.style\n    };\n\n    // Apply parent styles\n    if (this.parent) {\n      const parentComputed = this.parent.getComputedStyle();\n      Object.assign(computed, parentComputed);\n    }\n\n    // Apply overrides\n    Object.assign(computed, this.overrides);\n    return computed;\n  }\n  updateStyle(newStyle) {\n    Object.assign(this.style, newStyle);\n  }\n  overrideStyle(overrides) {\n    Object.assign(this.overrides, overrides);\n  }\n  resetOverrides() {\n    this.overrides = {};\n  }\n}\n\n// QElement Manager\nexport class QElementManager {\n  constructor() {\n    this._elements = new Map();\n    this._rootElements = [];\n  }\n  register(element) {\n    this._elements.set(element.id, element);\n    if (!element.parent) {\n      this._rootElements.push(element);\n    }\n  }\n  unregister(id) {\n    const element = this._elements.get(id);\n    if (element) {\n      if (element.parent) {\n        element.parent.removeChild(element);\n      } else {\n        const index = this._rootElements.indexOf(element);\n        if (index > -1) {\n          this._rootElements.splice(index, 1);\n        }\n      }\n      this._elements.delete(id);\n    }\n  }\n  getElement(id) {\n    return this._elements.get(id) || null;\n  }\n  createElement(id, style = {}) {\n    const element = new QElement(id, style);\n    this.register(element);\n    return element;\n  }\n  updateParentStyle(id, newStyle) {\n    const element = this._elements.get(id);\n    if (element) {\n      element.updateStyle(newStyle);\n    }\n  }\n  overrideChildStyle(id, overrides) {\n    const element = this._elements.get(id);\n    if (element) {\n      element.overrideStyle(overrides);\n    }\n  }\n  resetChildOverrides(id) {\n    const element = this._elements.get(id);\n    if (element) {\n      element.resetOverrides();\n    }\n  }\n  getComputedStyle(id) {\n    const element = this._elements.get(id);\n    return element ? element.getComputedStyle() : null;\n  }\n}\n\n// Context Types\n\nconst QElementContext = /*#__PURE__*/createContext(null);\nexport const QElementProvider = ({\n  children\n}) => {\n  _s();\n  const [manager] = useState(() => new QElementManager());\n  const [, forceUpdate] = useState({});\n  const triggerUpdate = useCallback(() => {\n    forceUpdate({});\n  }, []);\n  const createElement = useCallback((id, style = {}) => {\n    const element = manager.createElement(id, style);\n    triggerUpdate();\n    return element;\n  }, [manager, triggerUpdate]);\n  const updateParentStyle = useCallback((id, newStyle) => {\n    manager.updateParentStyle(id, newStyle);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n  const overrideChildStyle = useCallback((id, overrides) => {\n    manager.overrideChildStyle(id, overrides);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n  const resetChildOverrides = useCallback(id => {\n    manager.resetChildOverrides(id);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n  const getComputedStyle = useCallback(id => {\n    return manager.getComputedStyle(id);\n  }, [manager]);\n  const contextValue = {\n    manager,\n    createElement,\n    updateParentStyle,\n    overrideChildStyle,\n    resetChildOverrides,\n    getComputedStyle,\n    forceUpdate: triggerUpdate\n  };\n  return /*#__PURE__*/_jsxDEV(QElementContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(QElementProvider, \"3JDdAiYctkJppGrpLOqCQIVHT5c=\");\n_c = QElementProvider;\nexport const useQElement = () => {\n  _s2();\n  const context = useContext(QElementContext);\n  if (!context) {\n    throw new Error('useQElement must be used within a QElementProvider');\n  }\n  return context;\n};\n_s2(useQElement, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"QElementProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","QElement","constructor","id","style","parent","children","overrides","addChild","child","push","removeChild","index","indexOf","splice","getComputedStyle","computed","parentComputed","Object","assign","updateStyle","newStyle","overrideStyle","resetOverrides","QElementManager","_elements","Map","_rootElements","register","element","set","unregister","get","delete","getElement","createElement","updateParentStyle","overrideChildStyle","resetChildOverrides","QElementContext","QElementProvider","_s","manager","forceUpdate","triggerUpdate","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useQElement","_s2","context","Error","$RefreshReg$"],"sources":["/Users/jayson/Downloads/QElements_Demo/src/qelements/QElementProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback, ReactNode } from 'react';\n\n// QElement Style Interface\nexport interface QElementStyle {\n  // Layout\n  padding?: number | string;\n  margin?: number | string;\n  width?: number | string;\n  height?: number | string;\n  minWidth?: number | string;\n  minHeight?: number | string;\n  maxWidth?: number | string;\n  maxHeight?: number | string;\n  \n  // Positioning\n  position?: 'static' | 'relative' | 'absolute' | 'fixed' | 'sticky';\n  top?: number | string;\n  right?: number | string;\n  bottom?: number | string;\n  left?: number | string;\n  zIndex?: number;\n  \n  // Display & Flexbox\n  display?: 'block' | 'inline' | 'inline-block' | 'flex' | 'grid' | 'none';\n  flexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\n  justifyContent?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';\n  alignItems?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline';\n  flexWrap?: 'nowrap' | 'wrap' | 'wrap-reverse';\n  flex?: number | string;\n  flexGrow?: number;\n  flexShrink?: number;\n  flexBasis?: number | string;\n  gap?: number | string;\n  \n  // Colors & Background\n  backgroundColor?: string;\n  color?: string;\n  backgroundImage?: string;\n  backgroundSize?: string;\n  backgroundPosition?: string;\n  backgroundRepeat?: string;\n  \n  // Typography\n  fontSize?: number | string;\n  fontWeight?: number | string;\n  fontFamily?: string;\n  textAlign?: 'left' | 'center' | 'right' | 'justify';\n  textDecoration?: string;\n  textTransform?: 'none' | 'uppercase' | 'lowercase' | 'capitalize';\n  lineHeight?: number | string;\n  letterSpacing?: number | string;\n  \n  // Borders\n  border?: string;\n  borderTop?: string;\n  borderRight?: string;\n  borderBottom?: string;\n  borderLeft?: string;\n  borderRadius?: number | string;\n  borderWidth?: number | string;\n  borderStyle?: string;\n  borderColor?: string;\n  \n  // Effects\n  boxShadow?: string;\n  opacity?: number;\n  transform?: string;\n  transition?: string;\n  cursor?: string;\n  userSelect?: 'none' | 'auto' | 'text' | 'all';\n  \n  // Spacing\n  paddingTop?: number | string;\n  paddingRight?: number | string;\n  paddingBottom?: number | string;\n  paddingLeft?: number | string;\n  marginTop?: number | string;\n  marginRight?: number | string;\n  marginBottom?: number | string;\n  marginLeft?: number | string;\n}\n\n// QElement Class\nexport class QElement {\n  public id: string;\n  public style: QElementStyle;\n  public parent: QElement | null = null;\n  public children: QElement[] = [];\n  public overrides: Partial<QElementStyle> = {};\n\n  constructor(id: string, style: QElementStyle = {}) {\n    this.id = id;\n    this.style = style;\n  }\n\n  addChild(child: QElement): void {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child: QElement): void {\n    const index = this.children.indexOf(child);\n    if (index > -1) {\n      this.children.splice(index, 1);\n      child.parent = null;\n    }\n  }\n\n  getComputedStyle(): QElementStyle {\n    const computed: QElementStyle = { ...this.style };\n    \n    // Apply parent styles\n    if (this.parent) {\n      const parentComputed = this.parent.getComputedStyle();\n      Object.assign(computed, parentComputed);\n    }\n    \n    // Apply overrides\n    Object.assign(computed, this.overrides);\n    \n    return computed;\n  }\n\n  updateStyle(newStyle: Partial<QElementStyle>): void {\n    Object.assign(this.style, newStyle);\n  }\n\n  overrideStyle(overrides: Partial<QElementStyle>): void {\n    Object.assign(this.overrides, overrides);\n  }\n\n  resetOverrides(): void {\n    this.overrides = {};\n  }\n}\n\n// QElement Manager\nexport class QElementManager {\n  private _elements: Map<string, QElement> = new Map();\n  private _rootElements: QElement[] = [];\n\n  register(element: QElement): void {\n    this._elements.set(element.id, element);\n    if (!element.parent) {\n      this._rootElements.push(element);\n    }\n  }\n\n  unregister(id: string): void {\n    const element = this._elements.get(id);\n    if (element) {\n      if (element.parent) {\n        element.parent.removeChild(element);\n      } else {\n        const index = this._rootElements.indexOf(element);\n        if (index > -1) {\n          this._rootElements.splice(index, 1);\n        }\n      }\n      this._elements.delete(id);\n    }\n  }\n\n  getElement(id: string): QElement | null {\n    return this._elements.get(id) || null;\n  }\n\n  createElement(id: string, style: QElementStyle = {}): QElement {\n    const element = new QElement(id, style);\n    this.register(element);\n    return element;\n  }\n\n  updateParentStyle(id: string, newStyle: Partial<QElementStyle>): void {\n    const element = this._elements.get(id);\n    if (element) {\n      element.updateStyle(newStyle);\n    }\n  }\n\n  overrideChildStyle(id: string, overrides: Partial<QElementStyle>): void {\n    const element = this._elements.get(id);\n    if (element) {\n      element.overrideStyle(overrides);\n    }\n  }\n\n  resetChildOverrides(id: string): void {\n    const element = this._elements.get(id);\n    if (element) {\n      element.resetOverrides();\n    }\n  }\n\n  getComputedStyle(id: string): QElementStyle | null {\n    const element = this._elements.get(id);\n    return element ? element.getComputedStyle() : null;\n  }\n}\n\n// Context Types\ninterface QElementContextType {\n  manager: QElementManager;\n  createElement: (id: string, style?: QElementStyle) => QElement;\n  updateParentStyle: (id: string, newStyle: Partial<QElementStyle>) => void;\n  overrideChildStyle: (id: string, overrides: Partial<QElementStyle>) => void;\n  resetChildOverrides: (id: string) => void;\n  getComputedStyle: (id: string) => QElementStyle | null;\n  forceUpdate: () => void;\n}\n\nconst QElementContext = createContext<QElementContextType | null>(null);\n\ninterface QElementProviderProps {\n  children: ReactNode;\n}\n\nexport const QElementProvider: React.FC<QElementProviderProps> = ({ children }) => {\n  const [manager] = useState(() => new QElementManager());\n  const [, forceUpdate] = useState({});\n\n  const triggerUpdate = useCallback(() => {\n    forceUpdate({});\n  }, []);\n\n  const createElement = useCallback((id: string, style: QElementStyle = {}) => {\n    const element = manager.createElement(id, style);\n    triggerUpdate();\n    return element;\n  }, [manager, triggerUpdate]);\n\n  const updateParentStyle = useCallback((id: string, newStyle: Partial<QElementStyle>) => {\n    manager.updateParentStyle(id, newStyle);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n\n  const overrideChildStyle = useCallback((id: string, overrides: Partial<QElementStyle>) => {\n    manager.overrideChildStyle(id, overrides);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n\n  const resetChildOverrides = useCallback((id: string) => {\n    manager.resetChildOverrides(id);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n\n  const getComputedStyle = useCallback((id: string) => {\n    return manager.getComputedStyle(id);\n  }, [manager]);\n\n  const contextValue: QElementContextType = {\n    manager,\n    createElement,\n    updateParentStyle,\n    overrideChildStyle,\n    resetChildOverrides,\n    getComputedStyle,\n    forceUpdate: triggerUpdate\n  };\n\n  return (\n    <QElementContext.Provider value={contextValue}>\n      {children}\n    </QElementContext.Provider>\n  );\n};\n\nexport const useQElement = (): QElementContextType => {\n  const context = useContext(QElementContext);\n  if (!context) {\n    throw new Error('useQElement must be used within a QElementProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}