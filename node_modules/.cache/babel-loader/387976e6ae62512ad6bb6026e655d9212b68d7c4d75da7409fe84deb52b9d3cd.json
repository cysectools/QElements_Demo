{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/jayson/Downloads/QElements_Demo/src/qelements/types.ts"],"sourcesContent":["export interface QElementStyle {\n  // Layout\n  padding?: number | string;\n  margin?: number | string;\n  width?: number | string;\n  height?: number | string;\n  minWidth?: number | string;\n  minHeight?: number | string;\n  maxWidth?: number | string;\n  maxHeight?: number | string;\n  \n  // Positioning\n  position?: 'static' | 'relative' | 'absolute' | 'fixed' | 'sticky';\n  top?: number | string;\n  right?: number | string;\n  bottom?: number | string;\n  left?: number | string;\n  zIndex?: number;\n  \n  // Display & Flexbox\n  display?: 'block' | 'inline' | 'inline-block' | 'flex' | 'grid' | 'none';\n  flexDirection?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\n  justifyContent?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';\n  alignItems?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline';\n  flexWrap?: 'nowrap' | 'wrap' | 'wrap-reverse';\n  flex?: number | string;\n  flexGrow?: number;\n  flexShrink?: number;\n  flexBasis?: number | string;\n  gap?: number | string;\n  \n  // Grid\n  gridTemplateColumns?: string;\n  gridTemplateRows?: string;\n  gridColumn?: string;\n  gridRow?: string;\n  gridArea?: string;\n  \n  // Colors & Background\n  backgroundColor?: string;\n  color?: string;\n  backgroundImage?: string;\n  backgroundSize?: string;\n  backgroundPosition?: string;\n  backgroundRepeat?: string;\n  \n  // Typography\n  fontSize?: number | string;\n  fontWeight?: number | string;\n  fontFamily?: string;\n  lineHeight?: number | string;\n  textAlign?: 'left' | 'right' | 'center' | 'justify';\n  textDecoration?: string;\n  textTransform?: 'none' | 'capitalize' | 'uppercase' | 'lowercase';\n  letterSpacing?: number | string;\n  wordSpacing?: number | string;\n  \n  // Borders\n  border?: string;\n  borderTop?: string;\n  borderRight?: string;\n  borderBottom?: string;\n  borderLeft?: string;\n  borderRadius?: number | string;\n  borderTopLeftRadius?: number | string;\n  borderTopRightRadius?: number | string;\n  borderBottomLeftRadius?: number | string;\n  borderBottomRightRadius?: number | string;\n  borderWidth?: number | string;\n  borderStyle?: string;\n  borderColor?: string;\n  \n  // Shadows & Effects\n  boxShadow?: string;\n  textShadow?: string;\n  opacity?: number;\n  filter?: string;\n  backdropFilter?: string;\n  \n  // Transforms & Animations\n  transform?: string;\n  transformOrigin?: string;\n  transition?: string;\n  animation?: string;\n  animationDuration?: number | string;\n  animationDelay?: number | string;\n  animationIterationCount?: number | string;\n  animationDirection?: string;\n  animationFillMode?: string;\n  animationPlayState?: string;\n  \n  // Overflow\n  overflow?: 'visible' | 'hidden' | 'scroll' | 'auto';\n  overflowX?: 'visible' | 'hidden' | 'scroll' | 'auto';\n  overflowY?: 'visible' | 'hidden' | 'scroll' | 'auto';\n  \n  // Cursor & User Interaction\n  cursor?: string;\n  userSelect?: 'none' | 'auto' | 'text' | 'all' | 'contain';\n  pointerEvents?: 'auto' | 'none';\n  \n  // Responsive breakpoints\n  '@media'?: {\n    [breakpoint: string]: Partial<QElementStyle>;\n  };\n  \n  // Custom properties\n  [key: string]: any;\n}\n\nexport interface QElementProps {\n  id?: string;\n  className?: string;\n  style?: QElementStyle;\n  children?: React.ReactNode;\n  [key: string]: any;\n}\n\nexport interface QElementConfig {\n  id: string;\n  style: QElementStyle;\n  children?: QElementConfig[];\n  metadata?: QElementMetadata;\n}\n\nexport interface QElementMetadata {\n  tags?: string[];\n  description?: string;\n  version?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n  author?: string;\n  [key: string]: any;\n}\n\nexport interface QElementTheme {\n  name: string;\n  colors: {\n    primary: string;\n    secondary: string;\n    background: string;\n    surface: string;\n    text: string;\n    textSecondary: string;\n    border: string;\n    error: string;\n    warning: string;\n    success: string;\n    info: string;\n  };\n  typography: {\n    fontFamily: string;\n    fontSize: {\n      xs: string;\n      sm: string;\n      base: string;\n      lg: string;\n      xl: string;\n      '2xl': string;\n      '3xl': string;\n    };\n    fontWeight: {\n      light: number;\n      normal: number;\n      medium: number;\n      semibold: number;\n      bold: number;\n    };\n  };\n  spacing: {\n    xs: string;\n    sm: string;\n    md: string;\n    lg: string;\n    xl: string;\n    '2xl': string;\n  };\n  breakpoints: {\n    sm: string;\n    md: string;\n    lg: string;\n    xl: string;\n    '2xl': string;\n  };\n  borderRadius: {\n    none: string;\n    sm: string;\n    md: string;\n    lg: string;\n    xl: string;\n    full: string;\n  };\n  shadows: {\n    sm: string;\n    md: string;\n    lg: string;\n    xl: string;\n  };\n}\n\nexport interface QElementValidationRule {\n  property: string;\n  validator: (value: any) => boolean;\n  message: string;\n}\n\nexport interface QElementValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\nexport interface QElementAnimation {\n  name: string;\n  duration: number;\n  timingFunction: string;\n  delay?: number;\n  iterationCount?: number | 'infinite';\n  direction?: 'normal' | 'reverse' | 'alternate' | 'alternate-reverse';\n  fillMode?: 'none' | 'forwards' | 'backwards' | 'both';\n}\n\nexport interface QElementResponsiveConfig {\n  breakpoints: {\n    [key: string]: string;\n  };\n  defaultBreakpoint: string;\n}\n\nexport interface QElementPerformanceConfig {\n  enableMemoization: boolean;\n  enableLazyLoading: boolean;\n  maxCacheSize: number;\n  debounceDelay: number;\n}\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}