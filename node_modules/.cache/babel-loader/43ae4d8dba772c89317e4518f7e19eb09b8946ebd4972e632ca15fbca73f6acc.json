{"ast":null,"code":"import { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { useQElement } from './QElementProvider';\n// Advanced hook for QElement management\nexport const useQElementAdvanced = elementId => {\n  const {\n    manager,\n    forceUpdate\n  } = useQElement();\n  const [isVisible, setIsVisible] = useState(true);\n  const [isEnabled, setIsEnabled] = useState(true);\n  const [currentBreakpoint, setCurrentBreakpoint] = useState('md');\n  const [styleHash, setStyleHash] = useState('');\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n  // Update style hash when element changes\n  useEffect(() => {\n    if (element) {\n      setStyleHash(element.getStyleHash());\n    }\n  }, [element]);\n  // Listen for breakpoint changes\n  useEffect(() => {\n    if (element) {\n      const cleanup = element.onStyleChange(() => {\n        setStyleHash(element.getStyleHash());\n        forceUpdate();\n      });\n      return cleanup;\n    }\n  }, [element, forceUpdate]);\n  const updateParent = useCallback(newStyle => {\n    if (element) {\n      element.updateStyle(newStyle);\n    }\n  }, [element]);\n  const override = useCallback(overrides => {\n    if (element) {\n      element.overrideStyle(overrides);\n    }\n  }, [element]);\n  const reset = useCallback(() => {\n    if (element) {\n      element.resetToParent();\n    }\n  }, [element]);\n  const getComputed = useCallback(() => {\n    return element ? element.computedStyle : null;\n  }, [element]);\n  const validate = useCallback(() => {\n    return element ? element.validateStyle() : {\n      isValid: true,\n      errors: [],\n      warnings: []\n    };\n  }, [element]);\n  const setVisible = useCallback(visible => {\n    setIsVisible(visible);\n    if (element) {\n      element.setVisible(visible);\n    }\n  }, [element]);\n  const setEnabled = useCallback(enabled => {\n    setIsEnabled(enabled);\n    if (element) {\n      element.setEnabled(enabled);\n    }\n  }, [element]);\n  const addAnimation = useCallback((name, animation) => {\n    if (element) {\n      element.addAnimation(name, animation);\n    }\n  }, [element]);\n  const removeAnimation = useCallback(name => {\n    if (element) {\n      element.removeAnimation(name);\n    }\n  }, [element]);\n  const applyTheme = useCallback(themeName => {\n    if (element) {\n      element.applyTheme(themeName);\n    }\n  }, [element]);\n  const createResponsiveStyles = useCallback(responsiveStyles => {\n    if (element) {\n      element.createResponsiveStyles(responsiveStyles);\n    }\n  }, [element]);\n  return {\n    element,\n    updateParent,\n    override,\n    reset,\n    getComputed,\n    validate,\n    isVisible,\n    isEnabled,\n    setVisible,\n    setEnabled,\n    addAnimation,\n    removeAnimation,\n    applyTheme,\n    createResponsiveStyles,\n    currentBreakpoint,\n    styleHash\n  };\n};\n// Hook for theme management\nexport const useQElementTheme = () => {\n  const {\n    manager\n  } = useQElement();\n  const [currentTheme, setCurrentTheme] = useState('default');\n  const [availableThemes, setAvailableThemes] = useState([]);\n  useEffect(() => {\n    // Get available themes from the manager\n    const themes = manager.getAllElements().map(el => el.getCurrentTheme()).filter((theme, index, arr) => arr.indexOf(theme) === index);\n    setAvailableThemes(themes);\n  }, [manager]);\n  const switchTheme = useCallback(themeName => {\n    setCurrentTheme(themeName);\n    // Apply theme to all elements\n    manager.getAllElements().forEach(element => {\n      element.applyTheme(themeName);\n    });\n  }, [manager]);\n  const createTheme = useCallback(theme => {\n    // This would need to be implemented in the manager\n    console.log('Creating theme:', theme);\n  }, []);\n  return {\n    currentTheme,\n    availableThemes,\n    switchTheme,\n    createTheme\n  };\n};\n// Hook for responsive design\nexport const useQElementResponsive = elementId => {\n  const {\n    manager\n  } = useQElement();\n  const [currentBreakpoint, setCurrentBreakpoint] = useState('md');\n  const [isMobile, setIsMobile] = useState(false);\n  const [isTablet, setIsTablet] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n  useEffect(() => {\n    if (element) {\n      const breakpoint = element.getCurrentBreakpoint();\n      setCurrentBreakpoint(breakpoint);\n      setIsMobile(breakpoint === 'sm');\n      setIsTablet(breakpoint === 'md');\n      setIsDesktop(['lg', 'xl', '2xl'].includes(breakpoint));\n    }\n  }, [element]);\n  const createResponsiveStyle = useCallback(styles => {\n    if (element) {\n      const responsiveStyles = {};\n      if (styles.mobile) responsiveStyles.sm = styles.mobile;\n      if (styles.tablet) responsiveStyles.md = styles.tablet;\n      if (styles.desktop) responsiveStyles.lg = styles.desktop;\n      element.createResponsiveStyles(responsiveStyles);\n    }\n  }, [element]);\n  return {\n    currentBreakpoint,\n    isMobile,\n    isTablet,\n    isDesktop,\n    createResponsiveStyle\n  };\n};\n// Hook for animations\nexport const useQElementAnimation = elementId => {\n  const {\n    manager\n  } = useQElement();\n  const [animations, setAnimations] = useState([]);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n  useEffect(() => {\n    if (element) {\n      setAnimations(element.getAllAnimations());\n    }\n  }, [element]);\n  const addAnimation = useCallback((name, animation) => {\n    if (element) {\n      element.addAnimation(name, animation);\n      setAnimations(element.getAllAnimations());\n    }\n  }, [element]);\n  const removeAnimation = useCallback(name => {\n    if (element) {\n      element.removeAnimation(name);\n      setAnimations(element.getAllAnimations());\n    }\n  }, [element]);\n  const playAnimation = useCallback(name => {\n    if (element) {\n      const animation = element.getAnimation(name);\n      if (animation) {\n        setIsAnimating(true);\n        // Simulate animation duration\n        setTimeout(() => setIsAnimating(false), animation.duration);\n      }\n    }\n  }, [element]);\n  const stopAnimation = useCallback(() => {\n    setIsAnimating(false);\n  }, []);\n  return {\n    animations,\n    isAnimating,\n    addAnimation,\n    removeAnimation,\n    playAnimation,\n    stopAnimation\n  };\n};\n// Hook for performance monitoring\nexport const useQElementPerformance = elementId => {\n  const {\n    manager\n  } = useQElement();\n  const [renderCount, setRenderCount] = useState(0);\n  const [lastRenderTime, setLastRenderTime] = useState(0);\n  const renderStartTime = useRef(0);\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n  useEffect(() => {\n    renderStartTime.current = performance.now();\n    setRenderCount(prev => prev + 1);\n    const renderTime = performance.now() - renderStartTime.current;\n    setLastRenderTime(renderTime);\n  });\n  const getPerformanceMetrics = useCallback(() => {\n    if (element) {\n      return {\n        styleHash: element.getStyleHash(),\n        renderCount,\n        lastRenderTime,\n        isVisible: element.isVisible,\n        isEnabled: element.isEnabled\n      };\n    }\n    return null;\n  }, [element, renderCount, lastRenderTime]);\n  return {\n    renderCount,\n    lastRenderTime,\n    getPerformanceMetrics\n  };\n};","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","useRef","useQElement","useQElementAdvanced","elementId","manager","forceUpdate","isVisible","setIsVisible","isEnabled","setIsEnabled","currentBreakpoint","setCurrentBreakpoint","styleHash","setStyleHash","element","getElement","getStyleHash","cleanup","onStyleChange","updateParent","newStyle","updateStyle","override","overrides","overrideStyle","reset","resetToParent","getComputed","computedStyle","validate","validateStyle","isValid","errors","warnings","setVisible","visible","setEnabled","enabled","addAnimation","name","animation","removeAnimation","applyTheme","themeName","createResponsiveStyles","responsiveStyles","useQElementTheme","currentTheme","setCurrentTheme","availableThemes","setAvailableThemes","themes","getAllElements","map","el","getCurrentTheme","filter","theme","index","arr","indexOf","switchTheme","forEach","createTheme","console","log","useQElementResponsive","isMobile","setIsMobile","isTablet","setIsTablet","isDesktop","setIsDesktop","breakpoint","getCurrentBreakpoint","includes","createResponsiveStyle","styles","mobile","sm","tablet","md","desktop","lg","useQElementAnimation","animations","setAnimations","isAnimating","setIsAnimating","getAllAnimations","playAnimation","getAnimation","setTimeout","duration","stopAnimation","useQElementPerformance","renderCount","setRenderCount","lastRenderTime","setLastRenderTime","renderStartTime","current","performance","now","prev","renderTime","getPerformanceMetrics"],"sources":["/Users/jayson/Downloads/QElement/dist/QElementHooks.js"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { useQElement } from './QElementProvider';\n// Advanced hook for QElement management\nexport const useQElementAdvanced = (elementId) => {\n    const { manager, forceUpdate } = useQElement();\n    const [isVisible, setIsVisible] = useState(true);\n    const [isEnabled, setIsEnabled] = useState(true);\n    const [currentBreakpoint, setCurrentBreakpoint] = useState('md');\n    const [styleHash, setStyleHash] = useState('');\n    const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n    // Update style hash when element changes\n    useEffect(() => {\n        if (element) {\n            setStyleHash(element.getStyleHash());\n        }\n    }, [element]);\n    // Listen for breakpoint changes\n    useEffect(() => {\n        if (element) {\n            const cleanup = element.onStyleChange(() => {\n                setStyleHash(element.getStyleHash());\n                forceUpdate();\n            });\n            return cleanup;\n        }\n    }, [element, forceUpdate]);\n    const updateParent = useCallback((newStyle) => {\n        if (element) {\n            element.updateStyle(newStyle);\n        }\n    }, [element]);\n    const override = useCallback((overrides) => {\n        if (element) {\n            element.overrideStyle(overrides);\n        }\n    }, [element]);\n    const reset = useCallback(() => {\n        if (element) {\n            element.resetToParent();\n        }\n    }, [element]);\n    const getComputed = useCallback(() => {\n        return element ? element.computedStyle : null;\n    }, [element]);\n    const validate = useCallback(() => {\n        return element ? element.validateStyle() : { isValid: true, errors: [], warnings: [] };\n    }, [element]);\n    const setVisible = useCallback((visible) => {\n        setIsVisible(visible);\n        if (element) {\n            element.setVisible(visible);\n        }\n    }, [element]);\n    const setEnabled = useCallback((enabled) => {\n        setIsEnabled(enabled);\n        if (element) {\n            element.setEnabled(enabled);\n        }\n    }, [element]);\n    const addAnimation = useCallback((name, animation) => {\n        if (element) {\n            element.addAnimation(name, animation);\n        }\n    }, [element]);\n    const removeAnimation = useCallback((name) => {\n        if (element) {\n            element.removeAnimation(name);\n        }\n    }, [element]);\n    const applyTheme = useCallback((themeName) => {\n        if (element) {\n            element.applyTheme(themeName);\n        }\n    }, [element]);\n    const createResponsiveStyles = useCallback((responsiveStyles) => {\n        if (element) {\n            element.createResponsiveStyles(responsiveStyles);\n        }\n    }, [element]);\n    return {\n        element,\n        updateParent,\n        override,\n        reset,\n        getComputed,\n        validate,\n        isVisible,\n        isEnabled,\n        setVisible,\n        setEnabled,\n        addAnimation,\n        removeAnimation,\n        applyTheme,\n        createResponsiveStyles,\n        currentBreakpoint,\n        styleHash\n    };\n};\n// Hook for theme management\nexport const useQElementTheme = () => {\n    const { manager } = useQElement();\n    const [currentTheme, setCurrentTheme] = useState('default');\n    const [availableThemes, setAvailableThemes] = useState([]);\n    useEffect(() => {\n        // Get available themes from the manager\n        const themes = manager.getAllElements()\n            .map(el => el.getCurrentTheme())\n            .filter((theme, index, arr) => arr.indexOf(theme) === index);\n        setAvailableThemes(themes);\n    }, [manager]);\n    const switchTheme = useCallback((themeName) => {\n        setCurrentTheme(themeName);\n        // Apply theme to all elements\n        manager.getAllElements().forEach(element => {\n            element.applyTheme(themeName);\n        });\n    }, [manager]);\n    const createTheme = useCallback((theme) => {\n        // This would need to be implemented in the manager\n        console.log('Creating theme:', theme);\n    }, []);\n    return {\n        currentTheme,\n        availableThemes,\n        switchTheme,\n        createTheme\n    };\n};\n// Hook for responsive design\nexport const useQElementResponsive = (elementId) => {\n    const { manager } = useQElement();\n    const [currentBreakpoint, setCurrentBreakpoint] = useState('md');\n    const [isMobile, setIsMobile] = useState(false);\n    const [isTablet, setIsTablet] = useState(false);\n    const [isDesktop, setIsDesktop] = useState(false);\n    const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n    useEffect(() => {\n        if (element) {\n            const breakpoint = element.getCurrentBreakpoint();\n            setCurrentBreakpoint(breakpoint);\n            setIsMobile(breakpoint === 'sm');\n            setIsTablet(breakpoint === 'md');\n            setIsDesktop(['lg', 'xl', '2xl'].includes(breakpoint));\n        }\n    }, [element]);\n    const createResponsiveStyle = useCallback((styles) => {\n        if (element) {\n            const responsiveStyles = {};\n            if (styles.mobile)\n                responsiveStyles.sm = styles.mobile;\n            if (styles.tablet)\n                responsiveStyles.md = styles.tablet;\n            if (styles.desktop)\n                responsiveStyles.lg = styles.desktop;\n            element.createResponsiveStyles(responsiveStyles);\n        }\n    }, [element]);\n    return {\n        currentBreakpoint,\n        isMobile,\n        isTablet,\n        isDesktop,\n        createResponsiveStyle\n    };\n};\n// Hook for animations\nexport const useQElementAnimation = (elementId) => {\n    const { manager } = useQElement();\n    const [animations, setAnimations] = useState([]);\n    const [isAnimating, setIsAnimating] = useState(false);\n    const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n    useEffect(() => {\n        if (element) {\n            setAnimations(element.getAllAnimations());\n        }\n    }, [element]);\n    const addAnimation = useCallback((name, animation) => {\n        if (element) {\n            element.addAnimation(name, animation);\n            setAnimations(element.getAllAnimations());\n        }\n    }, [element]);\n    const removeAnimation = useCallback((name) => {\n        if (element) {\n            element.removeAnimation(name);\n            setAnimations(element.getAllAnimations());\n        }\n    }, [element]);\n    const playAnimation = useCallback((name) => {\n        if (element) {\n            const animation = element.getAnimation(name);\n            if (animation) {\n                setIsAnimating(true);\n                // Simulate animation duration\n                setTimeout(() => setIsAnimating(false), animation.duration);\n            }\n        }\n    }, [element]);\n    const stopAnimation = useCallback(() => {\n        setIsAnimating(false);\n    }, []);\n    return {\n        animations,\n        isAnimating,\n        addAnimation,\n        removeAnimation,\n        playAnimation,\n        stopAnimation\n    };\n};\n// Hook for performance monitoring\nexport const useQElementPerformance = (elementId) => {\n    const { manager } = useQElement();\n    const [renderCount, setRenderCount] = useState(0);\n    const [lastRenderTime, setLastRenderTime] = useState(0);\n    const renderStartTime = useRef(0);\n    const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n    useEffect(() => {\n        renderStartTime.current = performance.now();\n        setRenderCount(prev => prev + 1);\n        const renderTime = performance.now() - renderStartTime.current;\n        setLastRenderTime(renderTime);\n    });\n    const getPerformanceMetrics = useCallback(() => {\n        if (element) {\n            return {\n                styleHash: element.getStyleHash(),\n                renderCount,\n                lastRenderTime,\n                isVisible: element.isVisible,\n                isEnabled: element.isEnabled\n            };\n        }\n        return null;\n    }, [element, renderCount, lastRenderTime]);\n    return {\n        renderCount,\n        lastRenderTime,\n        getPerformanceMetrics\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}