{"ast":null,"code":"var _jsxFileName = \"/Users/jayson/Downloads/QElements_Demo/src/qelements/QElementProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { QElementManager } from './QElementManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QElementContext = /*#__PURE__*/createContext(null);\nexport const QElementProvider = ({\n  children\n}) => {\n  _s();\n  const [manager] = useState(() => new QElementManager());\n  const [, forceUpdate] = useState({});\n  const triggerUpdate = useCallback(() => {\n    forceUpdate({});\n  }, []);\n  const createElement = useCallback((id, style = {}) => {\n    const element = manager.createElement(id, style);\n    triggerUpdate();\n    return element;\n  }, [manager, triggerUpdate]);\n  const updateParentStyle = useCallback((id, newStyle) => {\n    manager.updateParentStyle(id, newStyle);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n  const overrideChildStyle = useCallback((id, overrides) => {\n    manager.overrideChildStyle(id, overrides);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n  const resetChildOverrides = useCallback(id => {\n    manager.resetChildOverrides(id);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n  const getComputedStyle = useCallback(id => {\n    return manager.getComputedStyle(id);\n  }, [manager]);\n  const contextValue = {\n    manager,\n    createElement,\n    updateParentStyle,\n    overrideChildStyle,\n    resetChildOverrides,\n    getComputedStyle,\n    forceUpdate: triggerUpdate\n  };\n  return /*#__PURE__*/_jsxDEV(QElementContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(QElementProvider, \"3JDdAiYctkJppGrpLOqCQIVHT5c=\");\n_c = QElementProvider;\nexport const useQElement = () => {\n  _s2();\n  const context = useContext(QElementContext);\n  if (!context) {\n    throw new Error('useQElement must be used within a QElementProvider');\n  }\n  return context;\n};\n_s2(useQElement, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"QElementProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","QElementManager","jsxDEV","_jsxDEV","QElementContext","QElementProvider","children","_s","manager","forceUpdate","triggerUpdate","createElement","id","style","element","updateParentStyle","newStyle","overrideChildStyle","overrides","resetChildOverrides","getComputedStyle","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useQElement","_s2","context","Error","$RefreshReg$"],"sources":["/Users/jayson/Downloads/QElements_Demo/src/qelements/QElementProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback, ReactNode } from 'react';\nimport { QElementManager } from './QElementManager';\nimport { QElement } from './QElement';\nimport { QElementStyle } from './types';\n\ninterface QElementContextType {\n  manager: QElementManager;\n  createElement: (id: string, style?: QElementStyle) => QElement;\n  updateParentStyle: (id: string, newStyle: Partial<QElementStyle>) => void;\n  overrideChildStyle: (id: string, overrides: Partial<QElementStyle>) => void;\n  resetChildOverrides: (id: string) => void;\n  getComputedStyle: (id: string) => QElementStyle | null;\n  forceUpdate: () => void;\n}\n\nconst QElementContext = createContext<QElementContextType | null>(null);\n\ninterface QElementProviderProps {\n  children: ReactNode;\n}\n\nexport const QElementProvider: React.FC<QElementProviderProps> = ({ children }) => {\n  const [manager] = useState(() => new QElementManager());\n  const [, forceUpdate] = useState({});\n\n  const triggerUpdate = useCallback(() => {\n    forceUpdate({});\n  }, []);\n\n  const createElement = useCallback((id: string, style: QElementStyle = {}) => {\n    const element = manager.createElement(id, style);\n    triggerUpdate();\n    return element;\n  }, [manager, triggerUpdate]);\n\n  const updateParentStyle = useCallback((id: string, newStyle: Partial<QElementStyle>) => {\n    manager.updateParentStyle(id, newStyle);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n\n  const overrideChildStyle = useCallback((id: string, overrides: Partial<QElementStyle>) => {\n    manager.overrideChildStyle(id, overrides);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n\n  const resetChildOverrides = useCallback((id: string) => {\n    manager.resetChildOverrides(id);\n    triggerUpdate();\n  }, [manager, triggerUpdate]);\n\n  const getComputedStyle = useCallback((id: string) => {\n    return manager.getComputedStyle(id);\n  }, [manager]);\n\n  const contextValue: QElementContextType = {\n    manager,\n    createElement,\n    updateParentStyle,\n    overrideChildStyle,\n    resetChildOverrides,\n    getComputedStyle,\n    forceUpdate: triggerUpdate\n  };\n\n  return (\n    <QElementContext.Provider value={contextValue}>\n      {children}\n    </QElementContext.Provider>\n  );\n};\n\nexport const useQElement = (): QElementContextType => {\n  const context = useContext(QElementContext);\n  if (!context) {\n    throw new Error('useQElement must be used within a QElementProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAmB,OAAO;AAC1F,SAASC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAcpD,MAAMC,eAAe,gBAAGP,aAAa,CAA6B,IAAI,CAAC;AAMvE,OAAO,MAAMQ,gBAAiD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM,IAAIE,eAAe,CAAC,CAAC,CAAC;EACvD,MAAM,GAAGQ,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMW,aAAa,GAAGV,WAAW,CAAC,MAAM;IACtCS,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAGX,WAAW,CAAC,CAACY,EAAU,EAAEC,KAAoB,GAAG,CAAC,CAAC,KAAK;IAC3E,MAAMC,OAAO,GAAGN,OAAO,CAACG,aAAa,CAACC,EAAE,EAAEC,KAAK,CAAC;IAChDH,aAAa,CAAC,CAAC;IACf,OAAOI,OAAO;EAChB,CAAC,EAAE,CAACN,OAAO,EAAEE,aAAa,CAAC,CAAC;EAE5B,MAAMK,iBAAiB,GAAGf,WAAW,CAAC,CAACY,EAAU,EAAEI,QAAgC,KAAK;IACtFR,OAAO,CAACO,iBAAiB,CAACH,EAAE,EAAEI,QAAQ,CAAC;IACvCN,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACF,OAAO,EAAEE,aAAa,CAAC,CAAC;EAE5B,MAAMO,kBAAkB,GAAGjB,WAAW,CAAC,CAACY,EAAU,EAAEM,SAAiC,KAAK;IACxFV,OAAO,CAACS,kBAAkB,CAACL,EAAE,EAAEM,SAAS,CAAC;IACzCR,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACF,OAAO,EAAEE,aAAa,CAAC,CAAC;EAE5B,MAAMS,mBAAmB,GAAGnB,WAAW,CAAEY,EAAU,IAAK;IACtDJ,OAAO,CAACW,mBAAmB,CAACP,EAAE,CAAC;IAC/BF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACF,OAAO,EAAEE,aAAa,CAAC,CAAC;EAE5B,MAAMU,gBAAgB,GAAGpB,WAAW,CAAEY,EAAU,IAAK;IACnD,OAAOJ,OAAO,CAACY,gBAAgB,CAACR,EAAE,CAAC;EACrC,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,MAAMa,YAAiC,GAAG;IACxCb,OAAO;IACPG,aAAa;IACbI,iBAAiB;IACjBE,kBAAkB;IAClBE,mBAAmB;IACnBC,gBAAgB;IAChBX,WAAW,EAAEC;EACf,CAAC;EAED,oBACEP,OAAA,CAACC,eAAe,CAACkB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAf,QAAA,EAC3CA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACpB,EAAA,CAhDWF,gBAAiD;AAAAuB,EAAA,GAAjDvB,gBAAiD;AAkD9D,OAAO,MAAMwB,WAAW,GAAGA,CAAA,KAA2B;EAAAC,GAAA;EACpD,MAAMC,OAAO,GAAGjC,UAAU,CAACM,eAAe,CAAC;EAC3C,IAAI,CAAC2B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,WAAW;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}