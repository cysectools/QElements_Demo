{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { useQElement } from './QElementProvider';\n// Advanced hook for QElement management\nexport const useQElementAdvanced = elementId => {\n  _s();\n  const {\n    manager,\n    forceUpdate\n  } = useQElement();\n  const [isVisible, setIsVisible] = useState(true);\n  const [isEnabled, setIsEnabled] = useState(true);\n  const [currentBreakpoint, setCurrentBreakpoint] = useState('md');\n  const [styleHash, setStyleHash] = useState('');\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n\n  // Update style hash when element changes\n  useEffect(() => {\n    if (element) {\n      setStyleHash(element.getStyleHash());\n    }\n  }, [element]);\n\n  // Listen for breakpoint changes\n  useEffect(() => {\n    if (element) {\n      const cleanup = element.onStyleChange(() => {\n        setStyleHash(element.getStyleHash());\n        forceUpdate();\n      });\n      return cleanup;\n    }\n  }, [element, forceUpdate]);\n  const updateParent = useCallback(newStyle => {\n    if (element) {\n      element.updateStyle(newStyle);\n    }\n  }, [element]);\n  const override = useCallback(overrides => {\n    if (element) {\n      element.overrideStyle(overrides);\n    }\n  }, [element]);\n  const reset = useCallback(() => {\n    if (element) {\n      element.resetToParent();\n    }\n  }, [element]);\n  const getComputed = useCallback(() => {\n    return element ? element.computedStyle : null;\n  }, [element]);\n  const validate = useCallback(() => {\n    return element ? element.validateStyle() : {\n      isValid: true,\n      errors: [],\n      warnings: []\n    };\n  }, [element]);\n  const setVisible = useCallback(visible => {\n    setIsVisible(visible);\n    if (element) {\n      element.setVisible(visible);\n    }\n  }, [element]);\n  const setEnabled = useCallback(enabled => {\n    setIsEnabled(enabled);\n    if (element) {\n      element.setEnabled(enabled);\n    }\n  }, [element]);\n  const addAnimation = useCallback((name, animation) => {\n    if (element) {\n      element.addAnimation(name, animation);\n    }\n  }, [element]);\n  const removeAnimation = useCallback(name => {\n    if (element) {\n      element.removeAnimation(name);\n    }\n  }, [element]);\n  const applyTheme = useCallback(themeName => {\n    if (element) {\n      element.applyTheme(themeName);\n    }\n  }, [element]);\n  const createResponsiveStyles = useCallback(responsiveStyles => {\n    if (element) {\n      element.createResponsiveStyles(responsiveStyles);\n    }\n  }, [element]);\n  return {\n    element,\n    updateParent,\n    override,\n    reset,\n    getComputed,\n    validate,\n    isVisible,\n    isEnabled,\n    setVisible,\n    setEnabled,\n    addAnimation,\n    removeAnimation,\n    applyTheme,\n    createResponsiveStyles,\n    currentBreakpoint,\n    styleHash\n  };\n};\n\n// Hook for theme management\n_s(useQElementAdvanced, \"CmpDCq5APgXBM1Cm+pZIRR9muKk=\", false, function () {\n  return [useQElement];\n});\nexport const useQElementTheme = () => {\n  _s2();\n  const {\n    manager\n  } = useQElement();\n  const [currentTheme, setCurrentTheme] = useState('default');\n  const [availableThemes, setAvailableThemes] = useState([]);\n  useEffect(() => {\n    // Get available themes from the manager\n    const themes = manager.getAllElements().map(el => el.getCurrentTheme()).filter((theme, index, arr) => arr.indexOf(theme) === index);\n    setAvailableThemes(themes);\n  }, [manager]);\n  const switchTheme = useCallback(themeName => {\n    setCurrentTheme(themeName);\n    // Apply theme to all elements\n    manager.getAllElements().forEach(element => {\n      element.applyTheme(themeName);\n    });\n  }, [manager]);\n  const createTheme = useCallback(theme => {\n    // This would need to be implemented in the manager\n    console.log('Creating theme:', theme);\n  }, []);\n  return {\n    currentTheme,\n    availableThemes,\n    switchTheme,\n    createTheme\n  };\n};\n\n// Hook for responsive design\n_s2(useQElementTheme, \"nvfD/9tja/06+YNLTzQhjhbjqEI=\", false, function () {\n  return [useQElement];\n});\nexport const useQElementResponsive = elementId => {\n  _s3();\n  const {\n    manager\n  } = useQElement();\n  const [currentBreakpoint, setCurrentBreakpoint] = useState('md');\n  const [isMobile, setIsMobile] = useState(false);\n  const [isTablet, setIsTablet] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n  useEffect(() => {\n    if (element) {\n      const breakpoint = element.getCurrentBreakpoint();\n      setCurrentBreakpoint(breakpoint);\n      setIsMobile(breakpoint === 'sm');\n      setIsTablet(breakpoint === 'md');\n      setIsDesktop(['lg', 'xl', '2xl'].includes(breakpoint));\n    }\n  }, [element]);\n  const createResponsiveStyle = useCallback(styles => {\n    if (element) {\n      const responsiveStyles = {};\n      if (styles.mobile) responsiveStyles.sm = styles.mobile;\n      if (styles.tablet) responsiveStyles.md = styles.tablet;\n      if (styles.desktop) responsiveStyles.lg = styles.desktop;\n      element.createResponsiveStyles(responsiveStyles);\n    }\n  }, [element]);\n  return {\n    currentBreakpoint,\n    isMobile,\n    isTablet,\n    isDesktop,\n    createResponsiveStyle\n  };\n};\n\n// Hook for animations\n_s3(useQElementResponsive, \"dU9U7jKQ5uq7WpAfql+WFp6zivw=\", false, function () {\n  return [useQElement];\n});\nexport const useQElementAnimation = elementId => {\n  _s4();\n  const {\n    manager\n  } = useQElement();\n  const [animations, setAnimations] = useState([]);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n  useEffect(() => {\n    if (element) {\n      setAnimations(element.getAllAnimations());\n    }\n  }, [element]);\n  const addAnimation = useCallback((name, animation) => {\n    if (element) {\n      element.addAnimation(name, animation);\n      setAnimations(element.getAllAnimations());\n    }\n  }, [element]);\n  const removeAnimation = useCallback(name => {\n    if (element) {\n      element.removeAnimation(name);\n      setAnimations(element.getAllAnimations());\n    }\n  }, [element]);\n  const playAnimation = useCallback(name => {\n    if (element) {\n      const animation = element.getAnimation(name);\n      if (animation) {\n        setIsAnimating(true);\n        // Simulate animation duration\n        setTimeout(() => setIsAnimating(false), animation.duration);\n      }\n    }\n  }, [element]);\n  const stopAnimation = useCallback(() => {\n    setIsAnimating(false);\n  }, []);\n  return {\n    animations,\n    isAnimating,\n    addAnimation,\n    removeAnimation,\n    playAnimation,\n    stopAnimation\n  };\n};\n\n// Hook for performance monitoring\n_s4(useQElementAnimation, \"AvPL1lZKcmRzvlpQ3/IYKr7Jgng=\", false, function () {\n  return [useQElement];\n});\nexport const useQElementPerformance = elementId => {\n  _s5();\n  const {\n    manager\n  } = useQElement();\n  const [renderCount, setRenderCount] = useState(0);\n  const [lastRenderTime, setLastRenderTime] = useState(0);\n  const renderStartTime = useRef(0);\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n  useEffect(() => {\n    renderStartTime.current = performance.now();\n    setRenderCount(prev => prev + 1);\n    const renderTime = performance.now() - renderStartTime.current;\n    setLastRenderTime(renderTime);\n  });\n  const getPerformanceMetrics = useCallback(() => {\n    if (element) {\n      return {\n        styleHash: element.getStyleHash(),\n        renderCount,\n        lastRenderTime,\n        isVisible: element.isVisible,\n        isEnabled: element.isEnabled\n      };\n    }\n    return null;\n  }, [element, renderCount, lastRenderTime]);\n  return {\n    renderCount,\n    lastRenderTime,\n    getPerformanceMetrics\n  };\n};\n_s5(useQElementPerformance, \"8wIRMt2pGV7Ok98m1I0rELAx18o=\", false, function () {\n  return [useQElement];\n});","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","useRef","useQElement","useQElementAdvanced","elementId","_s","manager","forceUpdate","isVisible","setIsVisible","isEnabled","setIsEnabled","currentBreakpoint","setCurrentBreakpoint","styleHash","setStyleHash","element","getElement","getStyleHash","cleanup","onStyleChange","updateParent","newStyle","updateStyle","override","overrides","overrideStyle","reset","resetToParent","getComputed","computedStyle","validate","validateStyle","isValid","errors","warnings","setVisible","visible","setEnabled","enabled","addAnimation","name","animation","removeAnimation","applyTheme","themeName","createResponsiveStyles","responsiveStyles","useQElementTheme","_s2","currentTheme","setCurrentTheme","availableThemes","setAvailableThemes","themes","getAllElements","map","el","getCurrentTheme","filter","theme","index","arr","indexOf","switchTheme","forEach","createTheme","console","log","useQElementResponsive","_s3","isMobile","setIsMobile","isTablet","setIsTablet","isDesktop","setIsDesktop","breakpoint","getCurrentBreakpoint","includes","createResponsiveStyle","styles","mobile","sm","tablet","md","desktop","lg","useQElementAnimation","_s4","animations","setAnimations","isAnimating","setIsAnimating","getAllAnimations","playAnimation","getAnimation","setTimeout","duration","stopAnimation","useQElementPerformance","_s5","renderCount","setRenderCount","lastRenderTime","setLastRenderTime","renderStartTime","current","performance","now","prev","renderTime","getPerformanceMetrics"],"sources":["/Users/jayson/Downloads/QElements_Demo/src/qelements/QElementHooks.ts"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { useQElement } from './QElementProvider';\nimport { QElementStyle, QElementAnimation, QElementTheme } from './types';\n\n// Advanced hook for QElement management\nexport const useQElementAdvanced = (elementId: string) => {\n  const { manager, forceUpdate } = useQElement();\n  const [isVisible, setIsVisible] = useState(true);\n  const [isEnabled, setIsEnabled] = useState(true);\n  const [currentBreakpoint, setCurrentBreakpoint] = useState('md');\n  const [styleHash, setStyleHash] = useState('');\n\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n\n  // Update style hash when element changes\n  useEffect(() => {\n    if (element) {\n      setStyleHash(element.getStyleHash());\n    }\n  }, [element]);\n\n  // Listen for breakpoint changes\n  useEffect(() => {\n    if (element) {\n      const cleanup = element.onStyleChange(() => {\n        setStyleHash(element.getStyleHash());\n        forceUpdate();\n      });\n\n      return cleanup;\n    }\n  }, [element, forceUpdate]);\n\n  const updateParent = useCallback((newStyle: Partial<QElementStyle>) => {\n    if (element) {\n      element.updateStyle(newStyle);\n    }\n  }, [element]);\n\n  const override = useCallback((overrides: Partial<QElementStyle>) => {\n    if (element) {\n      element.overrideStyle(overrides);\n    }\n  }, [element]);\n\n  const reset = useCallback(() => {\n    if (element) {\n      element.resetToParent();\n    }\n  }, [element]);\n\n  const getComputed = useCallback(() => {\n    return element ? element.computedStyle : null;\n  }, [element]);\n\n  const validate = useCallback(() => {\n    return element ? element.validateStyle() : { isValid: true, errors: [], warnings: [] };\n  }, [element]);\n\n  const setVisible = useCallback((visible: boolean) => {\n    setIsVisible(visible);\n    if (element) {\n      element.setVisible(visible);\n    }\n  }, [element]);\n\n  const setEnabled = useCallback((enabled: boolean) => {\n    setIsEnabled(enabled);\n    if (element) {\n      element.setEnabled(enabled);\n    }\n  }, [element]);\n\n  const addAnimation = useCallback((name: string, animation: QElementAnimation) => {\n    if (element) {\n      element.addAnimation(name, animation);\n    }\n  }, [element]);\n\n  const removeAnimation = useCallback((name: string) => {\n    if (element) {\n      element.removeAnimation(name);\n    }\n  }, [element]);\n\n  const applyTheme = useCallback((themeName: string) => {\n    if (element) {\n      element.applyTheme(themeName);\n    }\n  }, [element]);\n\n  const createResponsiveStyles = useCallback((responsiveStyles: { [breakpoint: string]: Partial<QElementStyle> }) => {\n    if (element) {\n      element.createResponsiveStyles(responsiveStyles);\n    }\n  }, [element]);\n\n  return {\n    element,\n    updateParent,\n    override,\n    reset,\n    getComputed,\n    validate,\n    isVisible,\n    isEnabled,\n    setVisible,\n    setEnabled,\n    addAnimation,\n    removeAnimation,\n    applyTheme,\n    createResponsiveStyles,\n    currentBreakpoint,\n    styleHash\n  };\n};\n\n// Hook for theme management\nexport const useQElementTheme = () => {\n  const { manager } = useQElement();\n  const [currentTheme, setCurrentTheme] = useState('default');\n  const [availableThemes, setAvailableThemes] = useState<string[]>([]);\n\n  useEffect(() => {\n    // Get available themes from the manager\n    const themes = manager.getAllElements()\n      .map(el => el.getCurrentTheme())\n      .filter((theme, index, arr) => arr.indexOf(theme) === index);\n    \n    setAvailableThemes(themes);\n  }, [manager]);\n\n  const switchTheme = useCallback((themeName: string) => {\n    setCurrentTheme(themeName);\n    // Apply theme to all elements\n    manager.getAllElements().forEach(element => {\n      element.applyTheme(themeName);\n    });\n  }, [manager]);\n\n  const createTheme = useCallback((theme: QElementTheme) => {\n    // This would need to be implemented in the manager\n    console.log('Creating theme:', theme);\n  }, []);\n\n  return {\n    currentTheme,\n    availableThemes,\n    switchTheme,\n    createTheme\n  };\n};\n\n// Hook for responsive design\nexport const useQElementResponsive = (elementId: string) => {\n  const { manager } = useQElement();\n  const [currentBreakpoint, setCurrentBreakpoint] = useState('md');\n  const [isMobile, setIsMobile] = useState(false);\n  const [isTablet, setIsTablet] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n\n  useEffect(() => {\n    if (element) {\n      const breakpoint = element.getCurrentBreakpoint();\n      setCurrentBreakpoint(breakpoint);\n      setIsMobile(breakpoint === 'sm');\n      setIsTablet(breakpoint === 'md');\n      setIsDesktop(['lg', 'xl', '2xl'].includes(breakpoint));\n    }\n  }, [element]);\n\n  const createResponsiveStyle = useCallback((styles: {\n    mobile?: Partial<QElementStyle>;\n    tablet?: Partial<QElementStyle>;\n    desktop?: Partial<QElementStyle>;\n  }) => {\n    if (element) {\n      const responsiveStyles: { [breakpoint: string]: Partial<QElementStyle> } = {};\n      \n      if (styles.mobile) responsiveStyles.sm = styles.mobile;\n      if (styles.tablet) responsiveStyles.md = styles.tablet;\n      if (styles.desktop) responsiveStyles.lg = styles.desktop;\n      \n      element.createResponsiveStyles(responsiveStyles);\n    }\n  }, [element]);\n\n  return {\n    currentBreakpoint,\n    isMobile,\n    isTablet,\n    isDesktop,\n    createResponsiveStyle\n  };\n};\n\n// Hook for animations\nexport const useQElementAnimation = (elementId: string) => {\n  const { manager } = useQElement();\n  const [animations, setAnimations] = useState<QElementAnimation[]>([]);\n  const [isAnimating, setIsAnimating] = useState(false);\n\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n\n  useEffect(() => {\n    if (element) {\n      setAnimations(element.getAllAnimations());\n    }\n  }, [element]);\n\n  const addAnimation = useCallback((name: string, animation: QElementAnimation) => {\n    if (element) {\n      element.addAnimation(name, animation);\n      setAnimations(element.getAllAnimations());\n    }\n  }, [element]);\n\n  const removeAnimation = useCallback((name: string) => {\n    if (element) {\n      element.removeAnimation(name);\n      setAnimations(element.getAllAnimations());\n    }\n  }, [element]);\n\n  const playAnimation = useCallback((name: string) => {\n    if (element) {\n      const animation = element.getAnimation(name);\n      if (animation) {\n        setIsAnimating(true);\n        // Simulate animation duration\n        setTimeout(() => setIsAnimating(false), animation.duration);\n      }\n    }\n  }, [element]);\n\n  const stopAnimation = useCallback(() => {\n    setIsAnimating(false);\n  }, []);\n\n  return {\n    animations,\n    isAnimating,\n    addAnimation,\n    removeAnimation,\n    playAnimation,\n    stopAnimation\n  };\n};\n\n// Hook for performance monitoring\nexport const useQElementPerformance = (elementId: string) => {\n  const { manager } = useQElement();\n  const [renderCount, setRenderCount] = useState(0);\n  const [lastRenderTime, setLastRenderTime] = useState<number>(0);\n  const renderStartTime = useRef<number>(0);\n\n  const element = useMemo(() => manager.getElement(elementId), [manager, elementId]);\n\n  useEffect(() => {\n    renderStartTime.current = performance.now();\n    setRenderCount(prev => prev + 1);\n    \n    const renderTime = performance.now() - renderStartTime.current;\n    setLastRenderTime(renderTime);\n  });\n\n  const getPerformanceMetrics = useCallback(() => {\n    if (element) {\n      return {\n        styleHash: element.getStyleHash(),\n        renderCount,\n        lastRenderTime,\n        isVisible: element.isVisible,\n        isEnabled: element.isEnabled\n      };\n    }\n    return null;\n  }, [element, renderCount, lastRenderTime]);\n\n  return {\n    renderCount,\n    lastRenderTime,\n    getPerformanceMetrics\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}