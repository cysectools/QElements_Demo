{"ast":null,"code":"import _objectSpread from \"/Users/jayson/Downloads/QElements_Demo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/jayson/Downloads/QElements_Demo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"elementId\", \"as\", \"children\", \"className\", \"style\", \"responsive\", \"animations\", \"onStyleChange\", \"onVisibilityChange\", \"onEnabledChange\", \"performanceMonitoring\"];\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport { useQElementAdvanced, useQElementResponsive, useQElementAnimation } from './QElementHooks';\nexport const QElementAdvanced = _ref => {\n  let {\n      elementId,\n      as: Component = 'div',\n      children,\n      className,\n      style: inlineStyle,\n      responsive,\n      animations,\n      onStyleChange,\n      onVisibilityChange,\n      onEnabledChange,\n      performanceMonitoring = false\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const {\n    element,\n    updateParent,\n    override,\n    reset,\n    getComputed,\n    validate,\n    isVisible,\n    isEnabled,\n    setVisible,\n    setEnabled,\n    addAnimation,\n    removeAnimation,\n    applyTheme,\n    createResponsiveStyles,\n    styleHash\n  } = useQElementAdvanced(elementId);\n  const {\n    currentBreakpoint,\n    isMobile,\n    isTablet,\n    isDesktop,\n    createResponsiveStyle\n  } = useQElementResponsive(elementId);\n  const {\n    animations: elementAnimations,\n    isAnimating,\n    addAnimation: addElementAnimation,\n    removeAnimation: removeElementAnimation,\n    playAnimation,\n    stopAnimation\n  } = useQElementAnimation(elementId);\n  const elementRef = useRef(null);\n  // Set up responsive styles\n  useEffect(() => {\n    if (responsive) {\n      createResponsiveStyle(responsive);\n    }\n  }, [responsive, createResponsiveStyle]);\n  // Set up animations\n  useEffect(() => {\n    if (animations) {\n      Object.entries(animations).forEach(_ref2 => {\n        let [name, animation] = _ref2;\n        addElementAnimation(name, animation);\n      });\n    }\n  }, [animations, addElementAnimation]);\n  // Convert QElement style to CSS style object\n  const convertToCSSStyle = qStyle => {\n    const cssStyle = {};\n    Object.entries(qStyle).forEach(_ref3 => {\n      let [key, value] = _ref3;\n      if (value !== undefined && value !== null) {\n        // Convert camelCase to kebab-case for CSS properties\n        const cssKey = key.replace(/([A-Z])/g, '-$1').toLowerCase();\n        cssStyle[cssKey] = value;\n      }\n    });\n    return cssStyle;\n  };\n  // Get computed style\n  const computedStyle = useMemo(() => {\n    const style = getComputed();\n    return style ? convertToCSSStyle(style) : {};\n  }, [getComputed, styleHash]);\n  // Merge computed style with inline style\n  const finalStyle = _objectSpread(_objectSpread(_objectSpread({}, computedStyle), inlineStyle), {}, {\n    // Add visibility and enabled states\n    display: isVisible ? computedStyle.display || 'block' : 'none',\n    pointerEvents: isEnabled ? 'auto' : 'none',\n    opacity: isEnabled ? 1 : 0.5\n  });\n  // Add animation styles\n  if (isAnimating && elementAnimations.length > 0) {\n    const animation = elementAnimations[0]; // Use first animation\n    finalStyle.animation = \"\".concat(animation.name, \" \").concat(animation.duration, \"ms \").concat(animation.timingFunction);\n    if (animation.delay) finalStyle.animationDelay = \"\".concat(animation.delay, \"ms\");\n    if (animation.iterationCount) finalStyle.animationIterationCount = animation.iterationCount.toString();\n    if (animation.direction) finalStyle.animationDirection = animation.direction;\n    if (animation.fillMode) finalStyle.animationFillMode = animation.fillMode;\n  }\n  // Performance monitoring\n  useEffect(() => {\n    if (performanceMonitoring) {\n      console.log(\"QElement \".concat(elementId, \" rendered with style hash: \").concat(styleHash));\n    }\n  }, [elementId, styleHash, performanceMonitoring]);\n  // Style change callback\n  useEffect(() => {\n    if (onStyleChange) {\n      const style = getComputed();\n      if (style) {\n        onStyleChange(style);\n      }\n    }\n  }, [getComputed, onStyleChange, styleHash]);\n  // Visibility change callback\n  useEffect(() => {\n    if (onVisibilityChange) {\n      onVisibilityChange(isVisible);\n    }\n  }, [isVisible, onVisibilityChange]);\n  // Enabled change callback\n  useEffect(() => {\n    if (onEnabledChange) {\n      onEnabledChange(isEnabled);\n    }\n  }, [isEnabled, onEnabledChange]);\n  // Validation\n  const validation = validate();\n  if (!validation.isValid) {\n    console.warn(\"QElement \".concat(elementId, \" validation errors:\"), validation.errors);\n  }\n  return React.createElement(Component, _objectSpread({\n    ref: elementRef,\n    className: className,\n    style: finalStyle,\n    'data-qelement-id': elementId,\n    'data-qelement-breakpoint': currentBreakpoint,\n    'data-qelement-visible': isVisible,\n    'data-qelement-enabled': isEnabled,\n    'data-qelement-animating': isAnimating\n  }, props), children);\n};","map":{"version":3,"names":["React","useEffect","useRef","useMemo","useQElementAdvanced","useQElementResponsive","useQElementAnimation","QElementAdvanced","_ref","elementId","as","Component","children","className","style","inlineStyle","responsive","animations","onStyleChange","onVisibilityChange","onEnabledChange","performanceMonitoring","props","_objectWithoutProperties","_excluded","element","updateParent","override","reset","getComputed","validate","isVisible","isEnabled","setVisible","setEnabled","addAnimation","removeAnimation","applyTheme","createResponsiveStyles","styleHash","currentBreakpoint","isMobile","isTablet","isDesktop","createResponsiveStyle","elementAnimations","isAnimating","addElementAnimation","removeElementAnimation","playAnimation","stopAnimation","elementRef","Object","entries","forEach","_ref2","name","animation","convertToCSSStyle","qStyle","cssStyle","_ref3","key","value","undefined","cssKey","replace","toLowerCase","computedStyle","finalStyle","_objectSpread","display","pointerEvents","opacity","length","concat","duration","timingFunction","delay","animationDelay","iterationCount","animationIterationCount","toString","direction","animationDirection","fillMode","animationFillMode","console","log","validation","isValid","warn","errors","createElement","ref"],"sources":["/Users/jayson/Downloads/QElement/dist/QElementAdvanced.js"],"sourcesContent":["import React, { useEffect, useRef, useMemo } from 'react';\nimport { useQElementAdvanced, useQElementResponsive, useQElementAnimation } from './QElementHooks';\nexport const QElementAdvanced = ({ elementId, as: Component = 'div', children, className, style: inlineStyle, responsive, animations, onStyleChange, onVisibilityChange, onEnabledChange, performanceMonitoring = false, ...props }) => {\n    const { element, updateParent, override, reset, getComputed, validate, isVisible, isEnabled, setVisible, setEnabled, addAnimation, removeAnimation, applyTheme, createResponsiveStyles, styleHash } = useQElementAdvanced(elementId);\n    const { currentBreakpoint, isMobile, isTablet, isDesktop, createResponsiveStyle } = useQElementResponsive(elementId);\n    const { animations: elementAnimations, isAnimating, addAnimation: addElementAnimation, removeAnimation: removeElementAnimation, playAnimation, stopAnimation } = useQElementAnimation(elementId);\n    const elementRef = useRef(null);\n    // Set up responsive styles\n    useEffect(() => {\n        if (responsive) {\n            createResponsiveStyle(responsive);\n        }\n    }, [responsive, createResponsiveStyle]);\n    // Set up animations\n    useEffect(() => {\n        if (animations) {\n            Object.entries(animations).forEach(([name, animation]) => {\n                addElementAnimation(name, animation);\n            });\n        }\n    }, [animations, addElementAnimation]);\n    // Convert QElement style to CSS style object\n    const convertToCSSStyle = (qStyle) => {\n        const cssStyle = {};\n        Object.entries(qStyle).forEach(([key, value]) => {\n            if (value !== undefined && value !== null) {\n                // Convert camelCase to kebab-case for CSS properties\n                const cssKey = key.replace(/([A-Z])/g, '-$1').toLowerCase();\n                cssStyle[cssKey] = value;\n            }\n        });\n        return cssStyle;\n    };\n    // Get computed style\n    const computedStyle = useMemo(() => {\n        const style = getComputed();\n        return style ? convertToCSSStyle(style) : {};\n    }, [getComputed, styleHash]);\n    // Merge computed style with inline style\n    const finalStyle = {\n        ...computedStyle,\n        ...inlineStyle,\n        // Add visibility and enabled states\n        display: isVisible ? (computedStyle.display || 'block') : 'none',\n        pointerEvents: isEnabled ? 'auto' : 'none',\n        opacity: isEnabled ? 1 : 0.5\n    };\n    // Add animation styles\n    if (isAnimating && elementAnimations.length > 0) {\n        const animation = elementAnimations[0]; // Use first animation\n        finalStyle.animation = `${animation.name} ${animation.duration}ms ${animation.timingFunction}`;\n        if (animation.delay)\n            finalStyle.animationDelay = `${animation.delay}ms`;\n        if (animation.iterationCount)\n            finalStyle.animationIterationCount = animation.iterationCount.toString();\n        if (animation.direction)\n            finalStyle.animationDirection = animation.direction;\n        if (animation.fillMode)\n            finalStyle.animationFillMode = animation.fillMode;\n    }\n    // Performance monitoring\n    useEffect(() => {\n        if (performanceMonitoring) {\n            console.log(`QElement ${elementId} rendered with style hash: ${styleHash}`);\n        }\n    }, [elementId, styleHash, performanceMonitoring]);\n    // Style change callback\n    useEffect(() => {\n        if (onStyleChange) {\n            const style = getComputed();\n            if (style) {\n                onStyleChange(style);\n            }\n        }\n    }, [getComputed, onStyleChange, styleHash]);\n    // Visibility change callback\n    useEffect(() => {\n        if (onVisibilityChange) {\n            onVisibilityChange(isVisible);\n        }\n    }, [isVisible, onVisibilityChange]);\n    // Enabled change callback\n    useEffect(() => {\n        if (onEnabledChange) {\n            onEnabledChange(isEnabled);\n        }\n    }, [isEnabled, onEnabledChange]);\n    // Validation\n    const validation = validate();\n    if (!validation.isValid) {\n        console.warn(`QElement ${elementId} validation errors:`, validation.errors);\n    }\n    return React.createElement(Component, {\n        ref: elementRef,\n        className: className,\n        style: finalStyle,\n        'data-qelement-id': elementId,\n        'data-qelement-breakpoint': currentBreakpoint,\n        'data-qelement-visible': isVisible,\n        'data-qelement-enabled': isEnabled,\n        'data-qelement-animating': isAnimating,\n        ...props\n    }, children);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AACzD,SAASC,mBAAmB,EAAEC,qBAAqB,EAAEC,oBAAoB,QAAQ,iBAAiB;AAClG,OAAO,MAAMC,gBAAgB,GAAGC,IAAA,IAAwM;EAAA,IAAvM;MAAEC,SAAS;MAAEC,EAAE,EAAEC,SAAS,GAAG,KAAK;MAAEC,QAAQ;MAAEC,SAAS;MAAEC,KAAK,EAAEC,WAAW;MAAEC,UAAU;MAAEC,UAAU;MAAEC,aAAa;MAAEC,kBAAkB;MAAEC,eAAe;MAAEC,qBAAqB,GAAG;IAAgB,CAAC,GAAAb,IAAA;IAAPc,KAAK,GAAAC,wBAAA,CAAAf,IAAA,EAAAgB,SAAA;EAC7N,MAAM;IAAEC,OAAO;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,WAAW;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,SAAS;IAAEC,UAAU;IAAEC,UAAU;IAAEC,YAAY;IAAEC,eAAe;IAAEC,UAAU;IAAEC,sBAAsB;IAAEC;EAAU,CAAC,GAAGnC,mBAAmB,CAACK,SAAS,CAAC;EACpO,MAAM;IAAE+B,iBAAiB;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAsB,CAAC,GAAGvC,qBAAqB,CAACI,SAAS,CAAC;EACpH,MAAM;IAAEQ,UAAU,EAAE4B,iBAAiB;IAAEC,WAAW;IAAEX,YAAY,EAAEY,mBAAmB;IAAEX,eAAe,EAAEY,sBAAsB;IAAEC,aAAa;IAAEC;EAAc,CAAC,GAAG5C,oBAAoB,CAACG,SAAS,CAAC;EAChM,MAAM0C,UAAU,GAAGjD,MAAM,CAAC,IAAI,CAAC;EAC/B;EACAD,SAAS,CAAC,MAAM;IACZ,IAAIe,UAAU,EAAE;MACZ4B,qBAAqB,CAAC5B,UAAU,CAAC;IACrC;EACJ,CAAC,EAAE,CAACA,UAAU,EAAE4B,qBAAqB,CAAC,CAAC;EACvC;EACA3C,SAAS,CAAC,MAAM;IACZ,IAAIgB,UAAU,EAAE;MACZmC,MAAM,CAACC,OAAO,CAACpC,UAAU,CAAC,CAACqC,OAAO,CAACC,KAAA,IAAuB;QAAA,IAAtB,CAACC,IAAI,EAAEC,SAAS,CAAC,GAAAF,KAAA;QACjDR,mBAAmB,CAACS,IAAI,EAAEC,SAAS,CAAC;MACxC,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACxC,UAAU,EAAE8B,mBAAmB,CAAC,CAAC;EACrC;EACA,MAAMW,iBAAiB,GAAIC,MAAM,IAAK;IAClC,MAAMC,QAAQ,GAAG,CAAC,CAAC;IACnBR,MAAM,CAACC,OAAO,CAACM,MAAM,CAAC,CAACL,OAAO,CAACO,KAAA,IAAkB;MAAA,IAAjB,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAAF,KAAA;MACxC,IAAIE,KAAK,KAAKC,SAAS,IAAID,KAAK,KAAK,IAAI,EAAE;QACvC;QACA,MAAME,MAAM,GAAGH,GAAG,CAACI,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAACC,WAAW,CAAC,CAAC;QAC3DP,QAAQ,CAACK,MAAM,CAAC,GAAGF,KAAK;MAC5B;IACJ,CAAC,CAAC;IACF,OAAOH,QAAQ;EACnB,CAAC;EACD;EACA,MAAMQ,aAAa,GAAGjE,OAAO,CAAC,MAAM;IAChC,MAAMW,KAAK,GAAGe,WAAW,CAAC,CAAC;IAC3B,OAAOf,KAAK,GAAG4C,iBAAiB,CAAC5C,KAAK,CAAC,GAAG,CAAC,CAAC;EAChD,CAAC,EAAE,CAACe,WAAW,EAAEU,SAAS,CAAC,CAAC;EAC5B;EACA,MAAM8B,UAAU,GAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACTF,aAAa,GACbrD,WAAW;IACd;IACAwD,OAAO,EAAExC,SAAS,GAAIqC,aAAa,CAACG,OAAO,IAAI,OAAO,GAAI,MAAM;IAChEC,aAAa,EAAExC,SAAS,GAAG,MAAM,GAAG,MAAM;IAC1CyC,OAAO,EAAEzC,SAAS,GAAG,CAAC,GAAG;EAAG,EAC/B;EACD;EACA,IAAIc,WAAW,IAAID,iBAAiB,CAAC6B,MAAM,GAAG,CAAC,EAAE;IAC7C,MAAMjB,SAAS,GAAGZ,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;IACxCwB,UAAU,CAACZ,SAAS,MAAAkB,MAAA,CAAMlB,SAAS,CAACD,IAAI,OAAAmB,MAAA,CAAIlB,SAAS,CAACmB,QAAQ,SAAAD,MAAA,CAAMlB,SAAS,CAACoB,cAAc,CAAE;IAC9F,IAAIpB,SAAS,CAACqB,KAAK,EACfT,UAAU,CAACU,cAAc,MAAAJ,MAAA,CAAMlB,SAAS,CAACqB,KAAK,OAAI;IACtD,IAAIrB,SAAS,CAACuB,cAAc,EACxBX,UAAU,CAACY,uBAAuB,GAAGxB,SAAS,CAACuB,cAAc,CAACE,QAAQ,CAAC,CAAC;IAC5E,IAAIzB,SAAS,CAAC0B,SAAS,EACnBd,UAAU,CAACe,kBAAkB,GAAG3B,SAAS,CAAC0B,SAAS;IACvD,IAAI1B,SAAS,CAAC4B,QAAQ,EAClBhB,UAAU,CAACiB,iBAAiB,GAAG7B,SAAS,CAAC4B,QAAQ;EACzD;EACA;EACApF,SAAS,CAAC,MAAM;IACZ,IAAIoB,qBAAqB,EAAE;MACvBkE,OAAO,CAACC,GAAG,aAAAb,MAAA,CAAalE,SAAS,iCAAAkE,MAAA,CAA8BpC,SAAS,CAAE,CAAC;IAC/E;EACJ,CAAC,EAAE,CAAC9B,SAAS,EAAE8B,SAAS,EAAElB,qBAAqB,CAAC,CAAC;EACjD;EACApB,SAAS,CAAC,MAAM;IACZ,IAAIiB,aAAa,EAAE;MACf,MAAMJ,KAAK,GAAGe,WAAW,CAAC,CAAC;MAC3B,IAAIf,KAAK,EAAE;QACPI,aAAa,CAACJ,KAAK,CAAC;MACxB;IACJ;EACJ,CAAC,EAAE,CAACe,WAAW,EAAEX,aAAa,EAAEqB,SAAS,CAAC,CAAC;EAC3C;EACAtC,SAAS,CAAC,MAAM;IACZ,IAAIkB,kBAAkB,EAAE;MACpBA,kBAAkB,CAACY,SAAS,CAAC;IACjC;EACJ,CAAC,EAAE,CAACA,SAAS,EAAEZ,kBAAkB,CAAC,CAAC;EACnC;EACAlB,SAAS,CAAC,MAAM;IACZ,IAAImB,eAAe,EAAE;MACjBA,eAAe,CAACY,SAAS,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACA,SAAS,EAAEZ,eAAe,CAAC,CAAC;EAChC;EACA,MAAMqE,UAAU,GAAG3D,QAAQ,CAAC,CAAC;EAC7B,IAAI,CAAC2D,UAAU,CAACC,OAAO,EAAE;IACrBH,OAAO,CAACI,IAAI,aAAAhB,MAAA,CAAalE,SAAS,0BAAuBgF,UAAU,CAACG,MAAM,CAAC;EAC/E;EACA,OAAO5F,KAAK,CAAC6F,aAAa,CAAClF,SAAS,EAAA2D,aAAA;IAChCwB,GAAG,EAAE3C,UAAU;IACftC,SAAS,EAAEA,SAAS;IACpBC,KAAK,EAAEuD,UAAU;IACjB,kBAAkB,EAAE5D,SAAS;IAC7B,0BAA0B,EAAE+B,iBAAiB;IAC7C,uBAAuB,EAAET,SAAS;IAClC,uBAAuB,EAAEC,SAAS;IAClC,yBAAyB,EAAEc;EAAW,GACnCxB,KAAK,GACTV,QAAQ,CAAC;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}