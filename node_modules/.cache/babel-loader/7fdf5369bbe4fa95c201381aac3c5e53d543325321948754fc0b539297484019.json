{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport { useQElementAdvanced, useQElementResponsive, useQElementAnimation } from './QElementHooks';\nexport const QElementAdvanced = ({\n  elementId,\n  as: Component = 'div',\n  children,\n  className,\n  style: inlineStyle,\n  responsive,\n  animations,\n  onStyleChange,\n  onVisibilityChange,\n  onEnabledChange,\n  performanceMonitoring = false,\n  ...props\n}) => {\n  _s();\n  const {\n    element,\n    updateParent,\n    override,\n    reset,\n    getComputed,\n    validate,\n    isVisible,\n    isEnabled,\n    setVisible,\n    setEnabled,\n    addAnimation,\n    removeAnimation,\n    applyTheme,\n    createResponsiveStyles,\n    styleHash\n  } = useQElementAdvanced(elementId);\n  const {\n    currentBreakpoint,\n    isMobile,\n    isTablet,\n    isDesktop,\n    createResponsiveStyle\n  } = useQElementResponsive(elementId);\n  const {\n    animations: elementAnimations,\n    isAnimating,\n    addAnimation: addElementAnimation,\n    removeAnimation: removeElementAnimation,\n    playAnimation,\n    stopAnimation\n  } = useQElementAnimation(elementId);\n  const elementRef = useRef(null);\n\n  // Set up responsive styles\n  useEffect(() => {\n    if (responsive) {\n      createResponsiveStyle(responsive);\n    }\n  }, [responsive, createResponsiveStyle]);\n\n  // Set up animations\n  useEffect(() => {\n    if (animations) {\n      Object.entries(animations).forEach(([name, animation]) => {\n        addElementAnimation(name, animation);\n      });\n    }\n  }, [animations, addElementAnimation]);\n\n  // Convert QElement style to CSS style object\n  const convertToCSSStyle = qStyle => {\n    const cssStyle = {};\n    Object.entries(qStyle).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) {\n        // Convert camelCase to kebab-case for CSS properties\n        const cssKey = key.replace(/([A-Z])/g, '-$1').toLowerCase();\n        cssStyle[cssKey] = value;\n      }\n    });\n    return cssStyle;\n  };\n\n  // Get computed style\n  const computedStyle = useMemo(() => {\n    const style = getComputed();\n    return style ? convertToCSSStyle(style) : {};\n  }, [getComputed, styleHash]);\n\n  // Merge computed style with inline style\n  const finalStyle = {\n    ...computedStyle,\n    ...inlineStyle,\n    // Add visibility and enabled states\n    display: isVisible ? computedStyle.display || 'block' : 'none',\n    pointerEvents: isEnabled ? 'auto' : 'none',\n    opacity: isEnabled ? 1 : 0.5\n  };\n\n  // Add animation styles\n  if (isAnimating && elementAnimations.length > 0) {\n    const animation = elementAnimations[0]; // Use first animation\n    finalStyle.animation = `${animation.name} ${animation.duration}ms ${animation.timingFunction}`;\n    if (animation.delay) finalStyle.animationDelay = `${animation.delay}ms`;\n    if (animation.iterationCount) finalStyle.animationIterationCount = animation.iterationCount.toString();\n    if (animation.direction) finalStyle.animationDirection = animation.direction;\n    if (animation.fillMode) finalStyle.animationFillMode = animation.fillMode;\n  }\n\n  // Performance monitoring\n  useEffect(() => {\n    if (performanceMonitoring) {\n      console.log(`QElement ${elementId} rendered with style hash: ${styleHash}`);\n    }\n  }, [elementId, styleHash, performanceMonitoring]);\n\n  // Style change callback\n  useEffect(() => {\n    if (onStyleChange) {\n      const style = getComputed();\n      if (style) {\n        onStyleChange(style);\n      }\n    }\n  }, [getComputed, onStyleChange, styleHash]);\n\n  // Visibility change callback\n  useEffect(() => {\n    if (onVisibilityChange) {\n      onVisibilityChange(isVisible);\n    }\n  }, [isVisible, onVisibilityChange]);\n\n  // Enabled change callback\n  useEffect(() => {\n    if (onEnabledChange) {\n      onEnabledChange(isEnabled);\n    }\n  }, [isEnabled, onEnabledChange]);\n\n  // Validation\n  const validation = validate();\n  if (!validation.isValid) {\n    console.warn(`QElement ${elementId} validation errors:`, validation.errors);\n  }\n  return /*#__PURE__*/React.createElement(Component, {\n    ref: elementRef,\n    className: className,\n    style: finalStyle,\n    'data-qelement-id': elementId,\n    'data-qelement-breakpoint': currentBreakpoint,\n    'data-qelement-visible': isVisible,\n    'data-qelement-enabled': isEnabled,\n    'data-qelement-animating': isAnimating,\n    ...props\n  }, children);\n};\n_s(QElementAdvanced, \"/Hr7f7TZsv19pvleoA43eI6Fq4I=\", false, function () {\n  return [useQElementAdvanced, useQElementResponsive, useQElementAnimation];\n});\n_c = QElementAdvanced;\nvar _c;\n$RefreshReg$(_c, \"QElementAdvanced\");","map":{"version":3,"names":["React","useEffect","useRef","useMemo","useQElementAdvanced","useQElementResponsive","useQElementAnimation","QElementAdvanced","elementId","as","Component","children","className","style","inlineStyle","responsive","animations","onStyleChange","onVisibilityChange","onEnabledChange","performanceMonitoring","props","_s","element","updateParent","override","reset","getComputed","validate","isVisible","isEnabled","setVisible","setEnabled","addAnimation","removeAnimation","applyTheme","createResponsiveStyles","styleHash","currentBreakpoint","isMobile","isTablet","isDesktop","createResponsiveStyle","elementAnimations","isAnimating","addElementAnimation","removeElementAnimation","playAnimation","stopAnimation","elementRef","Object","entries","forEach","name","animation","convertToCSSStyle","qStyle","cssStyle","key","value","undefined","cssKey","replace","toLowerCase","computedStyle","finalStyle","display","pointerEvents","opacity","length","duration","timingFunction","delay","animationDelay","iterationCount","animationIterationCount","toString","direction","animationDirection","fillMode","animationFillMode","console","log","validation","isValid","warn","errors","createElement","ref","_c","$RefreshReg$"],"sources":["/Users/jayson/Downloads/QElements_Demo/src/qelements/QElementAdvanced.tsx"],"sourcesContent":["import React, { useEffect, useRef, ReactNode, useMemo } from 'react';\nimport { useQElementAdvanced, useQElementResponsive, useQElementAnimation } from './QElementHooks';\nimport { QElementStyle, QElementProps } from './types';\n\ninterface QElementAdvancedProps extends QElementProps {\n  elementId: string;\n  as?: keyof JSX.IntrinsicElements;\n  responsive?: {\n    mobile?: Partial<QElementStyle>;\n    tablet?: Partial<QElementStyle>;\n    desktop?: Partial<QElementStyle>;\n  };\n  animations?: {\n    [name: string]: {\n      name: string;\n      duration: number;\n      timingFunction: string;\n      delay?: number;\n      iterationCount?: number | 'infinite';\n      direction?: 'normal' | 'reverse' | 'alternate' | 'alternate-reverse';\n      fillMode?: 'none' | 'forwards' | 'backwards' | 'both';\n    };\n  };\n  onStyleChange?: (style: QElementStyle) => void;\n  onVisibilityChange?: (visible: boolean) => void;\n  onEnabledChange?: (enabled: boolean) => void;\n  performanceMonitoring?: boolean;\n}\n\nexport const QElementAdvanced: React.FC<QElementAdvancedProps> = ({\n  elementId,\n  as: Component = 'div',\n  children,\n  className,\n  style: inlineStyle,\n  responsive,\n  animations,\n  onStyleChange,\n  onVisibilityChange,\n  onEnabledChange,\n  performanceMonitoring = false,\n  ...props\n}) => {\n  const {\n    element,\n    updateParent,\n    override,\n    reset,\n    getComputed,\n    validate,\n    isVisible,\n    isEnabled,\n    setVisible,\n    setEnabled,\n    addAnimation,\n    removeAnimation,\n    applyTheme,\n    createResponsiveStyles,\n    styleHash\n  } = useQElementAdvanced(elementId);\n\n  const {\n    currentBreakpoint,\n    isMobile,\n    isTablet,\n    isDesktop,\n    createResponsiveStyle\n  } = useQElementResponsive(elementId);\n\n  const {\n    animations: elementAnimations,\n    isAnimating,\n    addAnimation: addElementAnimation,\n    removeAnimation: removeElementAnimation,\n    playAnimation,\n    stopAnimation\n  } = useQElementAnimation(elementId);\n\n  const elementRef = useRef<HTMLElement>(null);\n\n  // Set up responsive styles\n  useEffect(() => {\n    if (responsive) {\n      createResponsiveStyle(responsive);\n    }\n  }, [responsive, createResponsiveStyle]);\n\n  // Set up animations\n  useEffect(() => {\n    if (animations) {\n      Object.entries(animations).forEach(([name, animation]) => {\n        addElementAnimation(name, animation);\n      });\n    }\n  }, [animations, addElementAnimation]);\n\n  // Convert QElement style to CSS style object\n  const convertToCSSStyle = (qStyle: QElementStyle): React.CSSProperties => {\n    const cssStyle: React.CSSProperties = {};\n    \n    Object.entries(qStyle).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) {\n        // Convert camelCase to kebab-case for CSS properties\n        const cssKey = key.replace(/([A-Z])/g, '-$1').toLowerCase();\n        cssStyle[cssKey as keyof React.CSSProperties] = value as any;\n      }\n    });\n\n    return cssStyle;\n  };\n\n  // Get computed style\n  const computedStyle = useMemo(() => {\n    const style = getComputed();\n    return style ? convertToCSSStyle(style) : {};\n  }, [getComputed, styleHash]);\n\n  // Merge computed style with inline style\n  const finalStyle: any = {\n    ...computedStyle,\n    ...inlineStyle,\n    // Add visibility and enabled states\n    display: isVisible ? (computedStyle.display || 'block') : 'none',\n    pointerEvents: isEnabled ? 'auto' : 'none',\n    opacity: isEnabled ? 1 : 0.5\n  };\n\n  // Add animation styles\n  if (isAnimating && elementAnimations.length > 0) {\n    const animation = elementAnimations[0]; // Use first animation\n    finalStyle.animation = `${animation.name} ${animation.duration}ms ${animation.timingFunction}`;\n    if (animation.delay) finalStyle.animationDelay = `${animation.delay}ms` as any;\n    if (animation.iterationCount) finalStyle.animationIterationCount = animation.iterationCount.toString();\n    if (animation.direction) finalStyle.animationDirection = animation.direction;\n    if (animation.fillMode) finalStyle.animationFillMode = animation.fillMode;\n  }\n\n  // Performance monitoring\n  useEffect(() => {\n    if (performanceMonitoring) {\n      console.log(`QElement ${elementId} rendered with style hash: ${styleHash}`);\n    }\n  }, [elementId, styleHash, performanceMonitoring]);\n\n  // Style change callback\n  useEffect(() => {\n    if (onStyleChange) {\n      const style = getComputed();\n      if (style) {\n        onStyleChange(style);\n      }\n    }\n  }, [getComputed, onStyleChange, styleHash]);\n\n  // Visibility change callback\n  useEffect(() => {\n    if (onVisibilityChange) {\n      onVisibilityChange(isVisible);\n    }\n  }, [isVisible, onVisibilityChange]);\n\n  // Enabled change callback\n  useEffect(() => {\n    if (onEnabledChange) {\n      onEnabledChange(isEnabled);\n    }\n  }, [isEnabled, onEnabledChange]);\n\n  // Validation\n  const validation = validate();\n  if (!validation.isValid) {\n    console.warn(`QElement ${elementId} validation errors:`, validation.errors);\n  }\n\n  return React.createElement(\n    Component,\n    {\n      ref: elementRef,\n      className: className,\n      style: finalStyle,\n      'data-qelement-id': elementId,\n      'data-qelement-breakpoint': currentBreakpoint,\n      'data-qelement-visible': isVisible,\n      'data-qelement-enabled': isEnabled,\n      'data-qelement-animating': isAnimating,\n      ...props\n    },\n    children\n  );\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}