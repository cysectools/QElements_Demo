{"ast":null,"code":"var _jsxFileName = \"/Users/jayson/Downloads/QElements_Demo/src/styles/ParentStylesProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { QElementProvider, useQElement } from 'qelements';\nimport { ParentStyles } from './ParentStyles';\n\n// =============================================================================\n// PARENT STYLES PROVIDER - Applies all parent styles to QElements\n// =============================================================================\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ParentStylesProvider = ({\n  children,\n  theme = 'default'\n}) => {\n  _s();\n  const {\n    updateParentStyle,\n    createElement\n  } = useQElement();\n  useEffect(() => {\n    // Apply root theme\n    updateParentStyle('root', ParentStyles.rootTheme);\n\n    // Apply navigation parent styles\n    updateParentStyle('navigation', ParentStyles.navigationParent);\n\n    // Apply button parent styles\n    updateParentStyle('button', ParentStyles.buttonParent);\n\n    // Apply card parent styles\n    updateParentStyle('card', ParentStyles.cardParent);\n\n    // Apply header parent styles\n    updateParentStyle('header', ParentStyles.headerParent);\n\n    // Apply content parent styles\n    updateParentStyle('content', ParentStyles.contentParent);\n\n    // Apply tooltip parent styles\n    updateParentStyle('tooltip', ParentStyles.tooltipParent);\n\n    // Apply footer parent styles\n    updateParentStyle('footer', ParentStyles.footerParent);\n\n    // Apply theme variation if specified\n    if (theme !== 'default') {\n      const themeStyles = ParentStyles[theme];\n      if (themeStyles) {\n        updateParentStyle('root', themeStyles);\n      }\n    }\n  }, [theme, updateParentStyle]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\n// =============================================================================\n// WRAPPED PROVIDER - Combines QElementProvider with ParentStylesProvider\n// =============================================================================\n_s(ParentStylesProvider, \"J4kntQzsfzoNYVZVp6gf18YkLvY=\", false, function () {\n  return [useQElement];\n});\n_c = ParentStylesProvider;\nexport const QElementsWithParents = ({\n  children,\n  theme = 'default'\n}) => {\n  return /*#__PURE__*/_jsxDEV(QElementProvider, {\n    children: /*#__PURE__*/_jsxDEV(ParentStylesProvider, {\n      theme: theme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n// =============================================================================\n// HOOK FOR ACCESSING PARENT STYLES - For components that need to modify parents\n// =============================================================================\n_c2 = QElementsWithParents;\nexport const useParentStyles = () => {\n  _s2();\n  const {\n    updateParentStyle,\n    getComputedStyle\n  } = useQElement();\n  return {\n    updateParentStyle,\n    getComputedStyle,\n    // Convenience methods for common parent updates\n    updateRootTheme: styles => updateParentStyle('root', styles),\n    updateNavigationTheme: styles => updateParentStyle('navigation', styles),\n    updateButtonTheme: styles => updateParentStyle('button', styles),\n    updateCardTheme: styles => updateParentStyle('card', styles),\n    updateHeaderTheme: styles => updateParentStyle('header', styles),\n    updateContentTheme: styles => updateParentStyle('content', styles),\n    updateTooltipTheme: styles => updateParentStyle('tooltip', styles),\n    updateFooterTheme: styles => updateParentStyle('footer', styles)\n  };\n};\n_s2(useParentStyles, \"yJboyWbIMAza/f052/3H5pPZ1Ds=\", false, function () {\n  return [useQElement];\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"ParentStylesProvider\");\n$RefreshReg$(_c2, \"QElementsWithParents\");","map":{"version":3,"names":["React","useEffect","QElementProvider","useQElement","ParentStyles","Fragment","_Fragment","jsxDEV","_jsxDEV","ParentStylesProvider","children","theme","_s","updateParentStyle","createElement","rootTheme","navigationParent","buttonParent","cardParent","headerParent","contentParent","tooltipParent","footerParent","themeStyles","_c","QElementsWithParents","fileName","_jsxFileName","lineNumber","columnNumber","_c2","useParentStyles","_s2","getComputedStyle","updateRootTheme","styles","updateNavigationTheme","updateButtonTheme","updateCardTheme","updateHeaderTheme","updateContentTheme","updateTooltipTheme","updateFooterTheme","$RefreshReg$"],"sources":["/Users/jayson/Downloads/QElements_Demo/src/styles/ParentStylesProvider.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { QElementProvider, useQElement } from 'qelements';\nimport { ParentStyles } from './ParentStyles';\n\n// =============================================================================\n// PARENT STYLES PROVIDER - Applies all parent styles to QElements\n// =============================================================================\ninterface ParentStylesProviderProps {\n  children: React.ReactNode;\n  theme?: 'default' | 'light' | 'blue' | 'purple';\n}\n\nexport const ParentStylesProvider: React.FC<ParentStylesProviderProps> = ({ \n  children, \n  theme = 'default' \n}) => {\n  const { updateParentStyle, createElement } = useQElement();\n\n  useEffect(() => {\n    // Apply root theme\n    updateParentStyle('root', ParentStyles.rootTheme);\n    \n    // Apply navigation parent styles\n    updateParentStyle('navigation', ParentStyles.navigationParent);\n    \n    // Apply button parent styles\n    updateParentStyle('button', ParentStyles.buttonParent);\n    \n    // Apply card parent styles\n    updateParentStyle('card', ParentStyles.cardParent);\n    \n    // Apply header parent styles\n    updateParentStyle('header', ParentStyles.headerParent);\n    \n    // Apply content parent styles\n    updateParentStyle('content', ParentStyles.contentParent);\n    \n    // Apply tooltip parent styles\n    updateParentStyle('tooltip', ParentStyles.tooltipParent);\n    \n    // Apply footer parent styles\n    updateParentStyle('footer', ParentStyles.footerParent);\n    \n    // Apply theme variation if specified\n    if (theme !== 'default') {\n      const themeStyles = ParentStyles[theme as keyof typeof ParentStyles];\n      if (themeStyles) {\n        updateParentStyle('root', themeStyles);\n      }\n    }\n  }, [theme, updateParentStyle]);\n\n  return <>{children}</>;\n};\n\n// =============================================================================\n// WRAPPED PROVIDER - Combines QElementProvider with ParentStylesProvider\n// =============================================================================\nexport const QElementsWithParents: React.FC<ParentStylesProviderProps> = ({ \n  children, \n  theme = 'default' \n}) => {\n  return (\n    <QElementProvider>\n      <ParentStylesProvider theme={theme}>\n        {children}\n      </ParentStylesProvider>\n    </QElementProvider>\n  );\n};\n\n// =============================================================================\n// HOOK FOR ACCESSING PARENT STYLES - For components that need to modify parents\n// =============================================================================\nexport const useParentStyles = () => {\n  const { updateParentStyle, getComputedStyle } = useQElement();\n  \n  return {\n    updateParentStyle,\n    getComputedStyle,\n    \n    // Convenience methods for common parent updates\n    updateRootTheme: (styles: any) => updateParentStyle('root', styles),\n    updateNavigationTheme: (styles: any) => updateParentStyle('navigation', styles),\n    updateButtonTheme: (styles: any) => updateParentStyle('button', styles),\n    updateCardTheme: (styles: any) => updateParentStyle('card', styles),\n    updateHeaderTheme: (styles: any) => updateParentStyle('header', styles),\n    updateContentTheme: (styles: any) => updateParentStyle('content', styles),\n    updateTooltipTheme: (styles: any) => updateParentStyle('tooltip', styles),\n    updateFooterTheme: (styles: any) => updateParentStyle('footer', styles),\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}